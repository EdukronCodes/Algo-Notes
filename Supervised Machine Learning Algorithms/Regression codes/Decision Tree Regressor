{"cells":[{"cell_type":"markdown","id":"779042a8","metadata":{"id":"779042a8"},"source":["# Import Packages\n","\n","# Decision Tree Regressor\n","\n","## Overview\n","The Decision Tree Regressor is a supervised machine learning algorithm used for solving regression problems. It works by recursively partitioning the dataset into subsets and creating a tree-like structure where leaf nodes represent the predicted continuous values. This method is particularly useful for understanding and modeling non-linear relationships in data.\n","\n","## Key Concepts\n","\n","### 1. Decision Tree Structure\n","- A decision tree consists of nodes that represent decisions based on input features and leaf nodes that hold the predicted regression values.\n","\n","### 2. Splitting\n","- The tree is constructed by repeatedly splitting the dataset into subsets based on feature values. The decision on which feature to split on is made to minimize the variance of the target variable within the subsets.\n","\n","### 3. Leaf Node\n","- Each leaf node contains a predicted value for the regression problem. Typically, this value is the mean of the target variable within that leaf.\n","\n","### 4. Pruning\n","- Decision trees can grow excessively and overfit the training data. Pruning is a technique to reduce tree size by removing branches that do not improve predictive performance significantly.\n","\n","### 5. Feature Importance\n","- Decision trees offer a measure of feature importance, helping to identify which features are most influential in making predictions.\n","\n","## Workflow\n","\n","1. **Data Preparation:** Collect and preprocess the dataset, which may include handling missing data, encoding categorical variables, and splitting the data into training and testing sets.\n","\n","2. **Model Training:** Train the Decision Tree Regressor on the training data, specifying hyperparameters such as maximum depth and minimum samples per leaf.\n","\n","3. **Prediction:** Use the trained model to make predictions on new or unseen data.\n","\n","4. **Model Evaluation:** Assess the model's performance using regression evaluation metrics, like Mean Absolute Error (MAE) and Mean Squared Error (MSE).\n","\n","## Hyperparameters\n","\n","- **Max Depth:** The maximum depth of the decision tree, controlling its complexity and overfitting potential.\n","- **Min Samples Per Leaf:** The minimum number of samples required in a leaf node before it can be further split.\n","- **Criterion:** The function used for evaluating the quality of splits (e.g., mean squared error or mean absolute error).\n","\n","## Advantages\n","\n","- Interpretability: Decision trees are easy to understand and visualize.\n","- Suitable for capturing non-linear relationships in data\n","\n","## Disadvantages\n","\n","- Prone to overfitting, especially with deep trees.\n","- Can produce biased results if the dataset is imbalanced or contains outliers."]},{"cell_type":"code","execution_count":1,"id":"7f026428","metadata":{"id":"7f026428","executionInfo":{"status":"ok","timestamp":1699717208770,"user_tz":-330,"elapsed":2915,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import sklearn.datasets\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn import metrics\n","from sklearn.tree import DecisionTreeRegressor\n","from sklearn.tree import export_graphviz\n","from graphviz import Source\n","import matplotlib.pyplot as plt"]},{"cell_type":"markdown","source":[],"metadata":{"id":"8PhFcSSWYlt-"},"id":"8PhFcSSWYlt-"},{"cell_type":"markdown","id":"e95c1a05","metadata":{"id":"e95c1a05"},"source":["## Importing the diabates dataset from sklearn"]},{"cell_type":"code","execution_count":2,"id":"ee73b856","metadata":{"scrolled":false,"colab":{"base_uri":"https://localhost:8080/"},"id":"ee73b856","executionInfo":{"status":"ok","timestamp":1699717208770,"user_tz":-330,"elapsed":11,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"}},"outputId":"4e9290d2-313b-45cb-ade7-0c76f22c1778"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'data': array([[ 0.03807591,  0.05068012,  0.06169621, ..., -0.00259226,\n","          0.01990749, -0.01764613],\n","        [-0.00188202, -0.04464164, -0.05147406, ..., -0.03949338,\n","         -0.06833155, -0.09220405],\n","        [ 0.08529891,  0.05068012,  0.04445121, ..., -0.00259226,\n","          0.00286131, -0.02593034],\n","        ...,\n","        [ 0.04170844,  0.05068012, -0.01590626, ..., -0.01107952,\n","         -0.04688253,  0.01549073],\n","        [-0.04547248, -0.04464164,  0.03906215, ...,  0.02655962,\n","          0.04452873, -0.02593034],\n","        [-0.04547248, -0.04464164, -0.0730303 , ..., -0.03949338,\n","         -0.00422151,  0.00306441]]),\n"," 'target': array([151.,  75., 141., 206., 135.,  97., 138.,  63., 110., 310., 101.,\n","         69., 179., 185., 118., 171., 166., 144.,  97., 168.,  68.,  49.,\n","         68., 245., 184., 202., 137.,  85., 131., 283., 129.,  59., 341.,\n","         87.,  65., 102., 265., 276., 252.,  90., 100.,  55.,  61.,  92.,\n","        259.,  53., 190., 142.,  75., 142., 155., 225.,  59., 104., 182.,\n","        128.,  52.,  37., 170., 170.,  61., 144.,  52., 128.,  71., 163.,\n","        150.,  97., 160., 178.,  48., 270., 202., 111.,  85.,  42., 170.,\n","        200., 252., 113., 143.,  51.,  52., 210.,  65., 141.,  55., 134.,\n","         42., 111.,  98., 164.,  48.,  96.,  90., 162., 150., 279.,  92.,\n","         83., 128., 102., 302., 198.,  95.,  53., 134., 144., 232.,  81.,\n","        104.,  59., 246., 297., 258., 229., 275., 281., 179., 200., 200.,\n","        173., 180.,  84., 121., 161.,  99., 109., 115., 268., 274., 158.,\n","        107.,  83., 103., 272.,  85., 280., 336., 281., 118., 317., 235.,\n","         60., 174., 259., 178., 128.,  96., 126., 288.,  88., 292.,  71.,\n","        197., 186.,  25.,  84.,  96., 195.,  53., 217., 172., 131., 214.,\n","         59.,  70., 220., 268., 152.,  47.,  74., 295., 101., 151., 127.,\n","        237., 225.,  81., 151., 107.,  64., 138., 185., 265., 101., 137.,\n","        143., 141.,  79., 292., 178.,  91., 116.,  86., 122.,  72., 129.,\n","        142.,  90., 158.,  39., 196., 222., 277.,  99., 196., 202., 155.,\n","         77., 191.,  70.,  73.,  49.,  65., 263., 248., 296., 214., 185.,\n","         78.,  93., 252., 150.,  77., 208.,  77., 108., 160.,  53., 220.,\n","        154., 259.,  90., 246., 124.,  67.,  72., 257., 262., 275., 177.,\n","         71.,  47., 187., 125.,  78.,  51., 258., 215., 303., 243.,  91.,\n","        150., 310., 153., 346.,  63.,  89.,  50.,  39., 103., 308., 116.,\n","        145.,  74.,  45., 115., 264.,  87., 202., 127., 182., 241.,  66.,\n","         94., 283.,  64., 102., 200., 265.,  94., 230., 181., 156., 233.,\n","         60., 219.,  80.,  68., 332., 248.,  84., 200.,  55.,  85.,  89.,\n","         31., 129.,  83., 275.,  65., 198., 236., 253., 124.,  44., 172.,\n","        114., 142., 109., 180., 144., 163., 147.,  97., 220., 190., 109.,\n","        191., 122., 230., 242., 248., 249., 192., 131., 237.,  78., 135.,\n","        244., 199., 270., 164.,  72.,  96., 306.,  91., 214.,  95., 216.,\n","        263., 178., 113., 200., 139., 139.,  88., 148.,  88., 243.,  71.,\n","         77., 109., 272.,  60.,  54., 221.,  90., 311., 281., 182., 321.,\n","         58., 262., 206., 233., 242., 123., 167.,  63., 197.,  71., 168.,\n","        140., 217., 121., 235., 245.,  40.,  52., 104., 132.,  88.,  69.,\n","        219.,  72., 201., 110.,  51., 277.,  63., 118.,  69., 273., 258.,\n","         43., 198., 242., 232., 175.,  93., 168., 275., 293., 281.,  72.,\n","        140., 189., 181., 209., 136., 261., 113., 131., 174., 257.,  55.,\n","         84.,  42., 146., 212., 233.,  91., 111., 152., 120.,  67., 310.,\n","         94., 183.,  66., 173.,  72.,  49.,  64.,  48., 178., 104., 132.,\n","        220.,  57.]),\n"," 'frame': None,\n"," 'DESCR': '.. _diabetes_dataset:\\n\\nDiabetes dataset\\n----------------\\n\\nTen baseline variables, age, sex, body mass index, average blood\\npressure, and six blood serum measurements were obtained for each of n =\\n442 diabetes patients, as well as the response of interest, a\\nquantitative measure of disease progression one year after baseline.\\n\\n**Data Set Characteristics:**\\n\\n  :Number of Instances: 442\\n\\n  :Number of Attributes: First 10 columns are numeric predictive values\\n\\n  :Target: Column 11 is a quantitative measure of disease progression one year after baseline\\n\\n  :Attribute Information:\\n      - age     age in years\\n      - sex\\n      - bmi     body mass index\\n      - bp      average blood pressure\\n      - s1      tc, total serum cholesterol\\n      - s2      ldl, low-density lipoproteins\\n      - s3      hdl, high-density lipoproteins\\n      - s4      tch, total cholesterol / HDL\\n      - s5      ltg, possibly log of serum triglycerides level\\n      - s6      glu, blood sugar level\\n\\nNote: Each of these 10 feature variables have been mean centered and scaled by the standard deviation times the square root of `n_samples` (i.e. the sum of squares of each column totals 1).\\n\\nSource URL:\\nhttps://www4.stat.ncsu.edu/~boos/var.select/diabetes.html\\n\\nFor more information see:\\nBradley Efron, Trevor Hastie, Iain Johnstone and Robert Tibshirani (2004) \"Least Angle Regression,\" Annals of Statistics (with discussion), 407-499.\\n(https://web.stanford.edu/~hastie/Papers/LARS/LeastAngle_2002.pdf)\\n',\n"," 'feature_names': ['age',\n","  'sex',\n","  'bmi',\n","  'bp',\n","  's1',\n","  's2',\n","  's3',\n","  's4',\n","  's5',\n","  's6'],\n"," 'data_filename': 'diabetes_data_raw.csv.gz',\n"," 'target_filename': 'diabetes_target.csv.gz',\n"," 'data_module': 'sklearn.datasets.data'}"]},"metadata":{},"execution_count":2}],"source":["from sklearn.datasets import load_diabetes\n","\n","\n","# Load the dataset\n","diabetes = load_diabetes()\n","diabetes\n"]},{"cell_type":"markdown","source":["## Read the DataFrame, first using the feature data"],"metadata":{"id":"aydVKiQVCj88"},"id":"aydVKiQVCj88"},{"cell_type":"code","source":["df = pd.DataFrame(diabetes.data, columns=diabetes.feature_names)\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"DvVGUgms0Xz1","executionInfo":{"status":"ok","timestamp":1699717216044,"user_tz":-330,"elapsed":6,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"}},"outputId":"ae909a1e-6e53-4fde-f8d5-fba048d4712b"},"id":"DvVGUgms0Xz1","execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        age       sex       bmi        bp        s1        s2        s3  \\\n","0  0.038076  0.050680  0.061696  0.021872 -0.044223 -0.034821 -0.043401   \n","1 -0.001882 -0.044642 -0.051474 -0.026328 -0.008449 -0.019163  0.074412   \n","2  0.085299  0.050680  0.044451 -0.005670 -0.045599 -0.034194 -0.032356   \n","3 -0.089063 -0.044642 -0.011595 -0.036656  0.012191  0.024991 -0.036038   \n","4  0.005383 -0.044642 -0.036385  0.021872  0.003935  0.015596  0.008142   \n","\n","         s4        s5        s6  \n","0 -0.002592  0.019907 -0.017646  \n","1 -0.039493 -0.068332 -0.092204  \n","2 -0.002592  0.002861 -0.025930  \n","3  0.034309  0.022688 -0.009362  \n","4 -0.002592 -0.031988 -0.046641  "],"text/html":["\n","  <div id=\"df-ec2cd3c2-0883-4bfc-a205-1fb7572fd4f7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>bmi</th>\n","      <th>bp</th>\n","      <th>s1</th>\n","      <th>s2</th>\n","      <th>s3</th>\n","      <th>s4</th>\n","      <th>s5</th>\n","      <th>s6</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.038076</td>\n","      <td>0.050680</td>\n","      <td>0.061696</td>\n","      <td>0.021872</td>\n","      <td>-0.044223</td>\n","      <td>-0.034821</td>\n","      <td>-0.043401</td>\n","      <td>-0.002592</td>\n","      <td>0.019907</td>\n","      <td>-0.017646</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-0.001882</td>\n","      <td>-0.044642</td>\n","      <td>-0.051474</td>\n","      <td>-0.026328</td>\n","      <td>-0.008449</td>\n","      <td>-0.019163</td>\n","      <td>0.074412</td>\n","      <td>-0.039493</td>\n","      <td>-0.068332</td>\n","      <td>-0.092204</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.085299</td>\n","      <td>0.050680</td>\n","      <td>0.044451</td>\n","      <td>-0.005670</td>\n","      <td>-0.045599</td>\n","      <td>-0.034194</td>\n","      <td>-0.032356</td>\n","      <td>-0.002592</td>\n","      <td>0.002861</td>\n","      <td>-0.025930</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-0.089063</td>\n","      <td>-0.044642</td>\n","      <td>-0.011595</td>\n","      <td>-0.036656</td>\n","      <td>0.012191</td>\n","      <td>0.024991</td>\n","      <td>-0.036038</td>\n","      <td>0.034309</td>\n","      <td>0.022688</td>\n","      <td>-0.009362</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.005383</td>\n","      <td>-0.044642</td>\n","      <td>-0.036385</td>\n","      <td>0.021872</td>\n","      <td>0.003935</td>\n","      <td>0.015596</td>\n","      <td>0.008142</td>\n","      <td>-0.002592</td>\n","      <td>-0.031988</td>\n","      <td>-0.046641</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ec2cd3c2-0883-4bfc-a205-1fb7572fd4f7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ec2cd3c2-0883-4bfc-a205-1fb7572fd4f7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ec2cd3c2-0883-4bfc-a205-1fb7572fd4f7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bc3bc6eb-7c37-4c5a-9405-b85d073fab6e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bc3bc6eb-7c37-4c5a-9405-b85d073fab6e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bc3bc6eb-7c37-4c5a-9405-b85d073fab6e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["## Read the DataFrame, add target feature to the dataset"],"metadata":{"id":"5Mvygo3VCnmQ"},"id":"5Mvygo3VCnmQ"},{"cell_type":"code","source":["df['target']=diabetes.target\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"J0L8XlbI1FtY","executionInfo":{"status":"ok","timestamp":1699717232548,"user_tz":-330,"elapsed":8,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"}},"outputId":"f56d4aef-411d-404d-d19c-10f44356d9e9"},"id":"J0L8XlbI1FtY","execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        age       sex       bmi        bp        s1        s2        s3  \\\n","0  0.038076  0.050680  0.061696  0.021872 -0.044223 -0.034821 -0.043401   \n","1 -0.001882 -0.044642 -0.051474 -0.026328 -0.008449 -0.019163  0.074412   \n","2  0.085299  0.050680  0.044451 -0.005670 -0.045599 -0.034194 -0.032356   \n","3 -0.089063 -0.044642 -0.011595 -0.036656  0.012191  0.024991 -0.036038   \n","4  0.005383 -0.044642 -0.036385  0.021872  0.003935  0.015596  0.008142   \n","\n","         s4        s5        s6  target  \n","0 -0.002592  0.019907 -0.017646   151.0  \n","1 -0.039493 -0.068332 -0.092204    75.0  \n","2 -0.002592  0.002861 -0.025930   141.0  \n","3  0.034309  0.022688 -0.009362   206.0  \n","4 -0.002592 -0.031988 -0.046641   135.0  "],"text/html":["\n","  <div id=\"df-a26077db-d495-4e9d-b6f9-7666a32c0f26\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>bmi</th>\n","      <th>bp</th>\n","      <th>s1</th>\n","      <th>s2</th>\n","      <th>s3</th>\n","      <th>s4</th>\n","      <th>s5</th>\n","      <th>s6</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.038076</td>\n","      <td>0.050680</td>\n","      <td>0.061696</td>\n","      <td>0.021872</td>\n","      <td>-0.044223</td>\n","      <td>-0.034821</td>\n","      <td>-0.043401</td>\n","      <td>-0.002592</td>\n","      <td>0.019907</td>\n","      <td>-0.017646</td>\n","      <td>151.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-0.001882</td>\n","      <td>-0.044642</td>\n","      <td>-0.051474</td>\n","      <td>-0.026328</td>\n","      <td>-0.008449</td>\n","      <td>-0.019163</td>\n","      <td>0.074412</td>\n","      <td>-0.039493</td>\n","      <td>-0.068332</td>\n","      <td>-0.092204</td>\n","      <td>75.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.085299</td>\n","      <td>0.050680</td>\n","      <td>0.044451</td>\n","      <td>-0.005670</td>\n","      <td>-0.045599</td>\n","      <td>-0.034194</td>\n","      <td>-0.032356</td>\n","      <td>-0.002592</td>\n","      <td>0.002861</td>\n","      <td>-0.025930</td>\n","      <td>141.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-0.089063</td>\n","      <td>-0.044642</td>\n","      <td>-0.011595</td>\n","      <td>-0.036656</td>\n","      <td>0.012191</td>\n","      <td>0.024991</td>\n","      <td>-0.036038</td>\n","      <td>0.034309</td>\n","      <td>0.022688</td>\n","      <td>-0.009362</td>\n","      <td>206.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.005383</td>\n","      <td>-0.044642</td>\n","      <td>-0.036385</td>\n","      <td>0.021872</td>\n","      <td>0.003935</td>\n","      <td>0.015596</td>\n","      <td>0.008142</td>\n","      <td>-0.002592</td>\n","      <td>-0.031988</td>\n","      <td>-0.046641</td>\n","      <td>135.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a26077db-d495-4e9d-b6f9-7666a32c0f26')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a26077db-d495-4e9d-b6f9-7666a32c0f26 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a26077db-d495-4e9d-b6f9-7666a32c0f26');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-67f9458b-e2b2-48a2-9fdd-2e91149c8672\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-67f9458b-e2b2-48a2-9fdd-2e91149c8672')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-67f9458b-e2b2-48a2-9fdd-2e91149c8672 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["## Checking the shape of Dataframe"],"metadata":{"id":"SPOqAF5nCs3j"},"id":"SPOqAF5nCs3j"},{"cell_type":"code","source":["df.shape\n","\n","## it has 20640 rows and 9 columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GJy3cS_iA4XL","executionInfo":{"status":"ok","timestamp":1699717253220,"user_tz":-330,"elapsed":621,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"}},"outputId":"2f66ee65-c251-4680-a8ac-973b289ef31f"},"id":"GJy3cS_iA4XL","execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(442, 11)"]},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","source":["## Check for missing values"],"metadata":{"id":"YN7yg5RkCxCi"},"id":"YN7yg5RkCxCi"},{"cell_type":"code","source":["df.isna().sum()\n","\n","### No null value present"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LnYtcWlh3OF-","executionInfo":{"status":"ok","timestamp":1699717268802,"user_tz":-330,"elapsed":629,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"}},"outputId":"0ed30792-f1da-4fe6-8c63-3686ae938fee"},"id":"LnYtcWlh3OF-","execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["age       0\n","sex       0\n","bmi       0\n","bp        0\n","s1        0\n","s2        0\n","s3        0\n","s4        0\n","s5        0\n","s6        0\n","target    0\n","dtype: int64"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["## Statistical measure of the dataset"],"metadata":{"id":"UfPqmjolC04l"},"id":"UfPqmjolC04l"},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"B6a7WWvtA_0Z","executionInfo":{"status":"ok","timestamp":1699717279635,"user_tz":-330,"elapsed":529,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"}},"outputId":"b83c3d59-e8eb-4ca5-d16c-63142e38a9db"},"id":"B6a7WWvtA_0Z","execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                age           sex           bmi            bp            s1  \\\n","count  4.420000e+02  4.420000e+02  4.420000e+02  4.420000e+02  4.420000e+02   \n","mean  -2.511817e-19  1.230790e-17 -2.245564e-16 -4.797570e-17 -1.381499e-17   \n","std    4.761905e-02  4.761905e-02  4.761905e-02  4.761905e-02  4.761905e-02   \n","min   -1.072256e-01 -4.464164e-02 -9.027530e-02 -1.123988e-01 -1.267807e-01   \n","25%   -3.729927e-02 -4.464164e-02 -3.422907e-02 -3.665608e-02 -3.424784e-02   \n","50%    5.383060e-03 -4.464164e-02 -7.283766e-03 -5.670422e-03 -4.320866e-03   \n","75%    3.807591e-02  5.068012e-02  3.124802e-02  3.564379e-02  2.835801e-02   \n","max    1.107267e-01  5.068012e-02  1.705552e-01  1.320436e-01  1.539137e-01   \n","\n","                 s2            s3            s4            s5            s6  \\\n","count  4.420000e+02  4.420000e+02  4.420000e+02  4.420000e+02  4.420000e+02   \n","mean   3.918434e-17 -5.777179e-18 -9.042540e-18  9.293722e-17  1.130318e-17   \n","std    4.761905e-02  4.761905e-02  4.761905e-02  4.761905e-02  4.761905e-02   \n","min   -1.156131e-01 -1.023071e-01 -7.639450e-02 -1.260971e-01 -1.377672e-01   \n","25%   -3.035840e-02 -3.511716e-02 -3.949338e-02 -3.324559e-02 -3.317903e-02   \n","50%   -3.819065e-03 -6.584468e-03 -2.592262e-03 -1.947171e-03 -1.077698e-03   \n","75%    2.984439e-02  2.931150e-02  3.430886e-02  3.243232e-02  2.791705e-02   \n","max    1.987880e-01  1.811791e-01  1.852344e-01  1.335973e-01  1.356118e-01   \n","\n","           target  \n","count  442.000000  \n","mean   152.133484  \n","std     77.093005  \n","min     25.000000  \n","25%     87.000000  \n","50%    140.500000  \n","75%    211.500000  \n","max    346.000000  "],"text/html":["\n","  <div id=\"df-d03b0190-a5f7-4c12-8063-556b9aa2f67e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>bmi</th>\n","      <th>bp</th>\n","      <th>s1</th>\n","      <th>s2</th>\n","      <th>s3</th>\n","      <th>s4</th>\n","      <th>s5</th>\n","      <th>s6</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>4.420000e+02</td>\n","      <td>4.420000e+02</td>\n","      <td>4.420000e+02</td>\n","      <td>4.420000e+02</td>\n","      <td>4.420000e+02</td>\n","      <td>4.420000e+02</td>\n","      <td>4.420000e+02</td>\n","      <td>4.420000e+02</td>\n","      <td>4.420000e+02</td>\n","      <td>4.420000e+02</td>\n","      <td>442.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>-2.511817e-19</td>\n","      <td>1.230790e-17</td>\n","      <td>-2.245564e-16</td>\n","      <td>-4.797570e-17</td>\n","      <td>-1.381499e-17</td>\n","      <td>3.918434e-17</td>\n","      <td>-5.777179e-18</td>\n","      <td>-9.042540e-18</td>\n","      <td>9.293722e-17</td>\n","      <td>1.130318e-17</td>\n","      <td>152.133484</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>4.761905e-02</td>\n","      <td>4.761905e-02</td>\n","      <td>4.761905e-02</td>\n","      <td>4.761905e-02</td>\n","      <td>4.761905e-02</td>\n","      <td>4.761905e-02</td>\n","      <td>4.761905e-02</td>\n","      <td>4.761905e-02</td>\n","      <td>4.761905e-02</td>\n","      <td>4.761905e-02</td>\n","      <td>77.093005</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>-1.072256e-01</td>\n","      <td>-4.464164e-02</td>\n","      <td>-9.027530e-02</td>\n","      <td>-1.123988e-01</td>\n","      <td>-1.267807e-01</td>\n","      <td>-1.156131e-01</td>\n","      <td>-1.023071e-01</td>\n","      <td>-7.639450e-02</td>\n","      <td>-1.260971e-01</td>\n","      <td>-1.377672e-01</td>\n","      <td>25.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>-3.729927e-02</td>\n","      <td>-4.464164e-02</td>\n","      <td>-3.422907e-02</td>\n","      <td>-3.665608e-02</td>\n","      <td>-3.424784e-02</td>\n","      <td>-3.035840e-02</td>\n","      <td>-3.511716e-02</td>\n","      <td>-3.949338e-02</td>\n","      <td>-3.324559e-02</td>\n","      <td>-3.317903e-02</td>\n","      <td>87.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>5.383060e-03</td>\n","      <td>-4.464164e-02</td>\n","      <td>-7.283766e-03</td>\n","      <td>-5.670422e-03</td>\n","      <td>-4.320866e-03</td>\n","      <td>-3.819065e-03</td>\n","      <td>-6.584468e-03</td>\n","      <td>-2.592262e-03</td>\n","      <td>-1.947171e-03</td>\n","      <td>-1.077698e-03</td>\n","      <td>140.500000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>3.807591e-02</td>\n","      <td>5.068012e-02</td>\n","      <td>3.124802e-02</td>\n","      <td>3.564379e-02</td>\n","      <td>2.835801e-02</td>\n","      <td>2.984439e-02</td>\n","      <td>2.931150e-02</td>\n","      <td>3.430886e-02</td>\n","      <td>3.243232e-02</td>\n","      <td>2.791705e-02</td>\n","      <td>211.500000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.107267e-01</td>\n","      <td>5.068012e-02</td>\n","      <td>1.705552e-01</td>\n","      <td>1.320436e-01</td>\n","      <td>1.539137e-01</td>\n","      <td>1.987880e-01</td>\n","      <td>1.811791e-01</td>\n","      <td>1.852344e-01</td>\n","      <td>1.335973e-01</td>\n","      <td>1.356118e-01</td>\n","      <td>346.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d03b0190-a5f7-4c12-8063-556b9aa2f67e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d03b0190-a5f7-4c12-8063-556b9aa2f67e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d03b0190-a5f7-4c12-8063-556b9aa2f67e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-817f65a7-01bb-4d81-9519-e1a260143d03\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-817f65a7-01bb-4d81-9519-e1a260143d03')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-817f65a7-01bb-4d81-9519-e1a260143d03 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["### Understanding the correlation between various features of dataset (Mainly measured wrt 'target variable')\n","#### a) Positive correlation--Both features are increaing in positive directions\n","#### b) Negative correlation--One feature is increasing and other is decresing"],"metadata":{"id":"OH7RlHdQC3Xl"},"id":"OH7RlHdQC3Xl"},{"cell_type":"code","source":["correlation=df.corr()\n","correlation"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"wzJsVSVQ-ZGJ","executionInfo":{"status":"ok","timestamp":1699717313268,"user_tz":-330,"elapsed":8,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"}},"outputId":"3dd4e7ca-df0e-4bf1-e7aa-34691e6a7f00"},"id":"wzJsVSVQ-ZGJ","execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             age       sex       bmi        bp        s1        s2        s3  \\\n","age     1.000000  0.173737  0.185085  0.335428  0.260061  0.219243 -0.075181   \n","sex     0.173737  1.000000  0.088161  0.241010  0.035277  0.142637 -0.379090   \n","bmi     0.185085  0.088161  1.000000  0.395411  0.249777  0.261170 -0.366811   \n","bp      0.335428  0.241010  0.395411  1.000000  0.242464  0.185548 -0.178762   \n","s1      0.260061  0.035277  0.249777  0.242464  1.000000  0.896663  0.051519   \n","s2      0.219243  0.142637  0.261170  0.185548  0.896663  1.000000 -0.196455   \n","s3     -0.075181 -0.379090 -0.366811 -0.178762  0.051519 -0.196455  1.000000   \n","s4      0.203841  0.332115  0.413807  0.257650  0.542207  0.659817 -0.738493   \n","s5      0.270774  0.149916  0.446157  0.393480  0.515503  0.318357 -0.398577   \n","s6      0.301731  0.208133  0.388680  0.390430  0.325717  0.290600 -0.273697   \n","target  0.187889  0.043062  0.586450  0.441482  0.212022  0.174054 -0.394789   \n","\n","              s4        s5        s6    target  \n","age     0.203841  0.270774  0.301731  0.187889  \n","sex     0.332115  0.149916  0.208133  0.043062  \n","bmi     0.413807  0.446157  0.388680  0.586450  \n","bp      0.257650  0.393480  0.390430  0.441482  \n","s1      0.542207  0.515503  0.325717  0.212022  \n","s2      0.659817  0.318357  0.290600  0.174054  \n","s3     -0.738493 -0.398577 -0.273697 -0.394789  \n","s4      1.000000  0.617859  0.417212  0.430453  \n","s5      0.617859  1.000000  0.464669  0.565883  \n","s6      0.417212  0.464669  1.000000  0.382483  \n","target  0.430453  0.565883  0.382483  1.000000  "],"text/html":["\n","  <div id=\"df-6e50cf80-def4-4ce2-ac89-6c37b4e2bc6f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>bmi</th>\n","      <th>bp</th>\n","      <th>s1</th>\n","      <th>s2</th>\n","      <th>s3</th>\n","      <th>s4</th>\n","      <th>s5</th>\n","      <th>s6</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>age</th>\n","      <td>1.000000</td>\n","      <td>0.173737</td>\n","      <td>0.185085</td>\n","      <td>0.335428</td>\n","      <td>0.260061</td>\n","      <td>0.219243</td>\n","      <td>-0.075181</td>\n","      <td>0.203841</td>\n","      <td>0.270774</td>\n","      <td>0.301731</td>\n","      <td>0.187889</td>\n","    </tr>\n","    <tr>\n","      <th>sex</th>\n","      <td>0.173737</td>\n","      <td>1.000000</td>\n","      <td>0.088161</td>\n","      <td>0.241010</td>\n","      <td>0.035277</td>\n","      <td>0.142637</td>\n","      <td>-0.379090</td>\n","      <td>0.332115</td>\n","      <td>0.149916</td>\n","      <td>0.208133</td>\n","      <td>0.043062</td>\n","    </tr>\n","    <tr>\n","      <th>bmi</th>\n","      <td>0.185085</td>\n","      <td>0.088161</td>\n","      <td>1.000000</td>\n","      <td>0.395411</td>\n","      <td>0.249777</td>\n","      <td>0.261170</td>\n","      <td>-0.366811</td>\n","      <td>0.413807</td>\n","      <td>0.446157</td>\n","      <td>0.388680</td>\n","      <td>0.586450</td>\n","    </tr>\n","    <tr>\n","      <th>bp</th>\n","      <td>0.335428</td>\n","      <td>0.241010</td>\n","      <td>0.395411</td>\n","      <td>1.000000</td>\n","      <td>0.242464</td>\n","      <td>0.185548</td>\n","      <td>-0.178762</td>\n","      <td>0.257650</td>\n","      <td>0.393480</td>\n","      <td>0.390430</td>\n","      <td>0.441482</td>\n","    </tr>\n","    <tr>\n","      <th>s1</th>\n","      <td>0.260061</td>\n","      <td>0.035277</td>\n","      <td>0.249777</td>\n","      <td>0.242464</td>\n","      <td>1.000000</td>\n","      <td>0.896663</td>\n","      <td>0.051519</td>\n","      <td>0.542207</td>\n","      <td>0.515503</td>\n","      <td>0.325717</td>\n","      <td>0.212022</td>\n","    </tr>\n","    <tr>\n","      <th>s2</th>\n","      <td>0.219243</td>\n","      <td>0.142637</td>\n","      <td>0.261170</td>\n","      <td>0.185548</td>\n","      <td>0.896663</td>\n","      <td>1.000000</td>\n","      <td>-0.196455</td>\n","      <td>0.659817</td>\n","      <td>0.318357</td>\n","      <td>0.290600</td>\n","      <td>0.174054</td>\n","    </tr>\n","    <tr>\n","      <th>s3</th>\n","      <td>-0.075181</td>\n","      <td>-0.379090</td>\n","      <td>-0.366811</td>\n","      <td>-0.178762</td>\n","      <td>0.051519</td>\n","      <td>-0.196455</td>\n","      <td>1.000000</td>\n","      <td>-0.738493</td>\n","      <td>-0.398577</td>\n","      <td>-0.273697</td>\n","      <td>-0.394789</td>\n","    </tr>\n","    <tr>\n","      <th>s4</th>\n","      <td>0.203841</td>\n","      <td>0.332115</td>\n","      <td>0.413807</td>\n","      <td>0.257650</td>\n","      <td>0.542207</td>\n","      <td>0.659817</td>\n","      <td>-0.738493</td>\n","      <td>1.000000</td>\n","      <td>0.617859</td>\n","      <td>0.417212</td>\n","      <td>0.430453</td>\n","    </tr>\n","    <tr>\n","      <th>s5</th>\n","      <td>0.270774</td>\n","      <td>0.149916</td>\n","      <td>0.446157</td>\n","      <td>0.393480</td>\n","      <td>0.515503</td>\n","      <td>0.318357</td>\n","      <td>-0.398577</td>\n","      <td>0.617859</td>\n","      <td>1.000000</td>\n","      <td>0.464669</td>\n","      <td>0.565883</td>\n","    </tr>\n","    <tr>\n","      <th>s6</th>\n","      <td>0.301731</td>\n","      <td>0.208133</td>\n","      <td>0.388680</td>\n","      <td>0.390430</td>\n","      <td>0.325717</td>\n","      <td>0.290600</td>\n","      <td>-0.273697</td>\n","      <td>0.417212</td>\n","      <td>0.464669</td>\n","      <td>1.000000</td>\n","      <td>0.382483</td>\n","    </tr>\n","    <tr>\n","      <th>target</th>\n","      <td>0.187889</td>\n","      <td>0.043062</td>\n","      <td>0.586450</td>\n","      <td>0.441482</td>\n","      <td>0.212022</td>\n","      <td>0.174054</td>\n","      <td>-0.394789</td>\n","      <td>0.430453</td>\n","      <td>0.565883</td>\n","      <td>0.382483</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6e50cf80-def4-4ce2-ac89-6c37b4e2bc6f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6e50cf80-def4-4ce2-ac89-6c37b4e2bc6f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6e50cf80-def4-4ce2-ac89-6c37b4e2bc6f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c5112849-5e85-4be0-94ea-c602ffe36a50\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c5112849-5e85-4be0-94ea-c602ffe36a50')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c5112849-5e85-4be0-94ea-c602ffe36a50 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["## Constructing the heatmap to understand it more better"],"metadata":{"id":"iRq2FlraDABi"},"id":"iRq2FlraDABi"},{"cell_type":"code","source":["import seaborn as sns\n","plt.figure(figsize=(10,10))\n","sns.heatmap(correlation, cbar=True, square=True, annot=True, annot_kws={'size':8}, fmt='0.1f', cmap='Blues' )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":829},"id":"RqXcRUAu-_Fw","executionInfo":{"status":"ok","timestamp":1699717331089,"user_tz":-330,"elapsed":1508,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"}},"outputId":"609c3743-c8b4-4494-a4a0-c22b978c0bc7"},"id":"RqXcRUAu-_Fw","execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":9},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x1000 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## Split other features from target varible, feed them separately to machine learning model to undestand the pattern.\n"],"metadata":{"id":"2h1iw7KrDHP2"},"id":"2h1iw7KrDHP2"},{"cell_type":"code","source":["x=df.drop('target', axis=1) ## Multiple Linear Regression\n","y=df['target']"],"metadata":{"id":"-MmpG0IYJz3r","executionInfo":{"status":"ok","timestamp":1699717359843,"user_tz":-330,"elapsed":483,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"}}},"id":"-MmpG0IYJz3r","execution_count":10,"outputs":[]},{"cell_type":"markdown","source":["## Use StandardScaler feature scaling technique to transform the data more suitable for modeling"],"metadata":{"id":"HrO-sRnLDK-7"},"id":"HrO-sRnLDK-7"},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","scaler = StandardScaler()\n","x1 = scaler.fit_transform(x)\n","x1.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IKExpC3kL7W4","executionInfo":{"status":"ok","timestamp":1699717404913,"user_tz":-330,"elapsed":630,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"}},"outputId":"b7e2dc57-7c9b-43fa-fef5-b535375ee919"},"id":"IKExpC3kL7W4","execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(442, 10)"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["## Splitting the data into training and test data"],"metadata":{"id":"xigdYas1DPMi"},"id":"xigdYas1DPMi"},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","x_train,x_test,y_train,y_test=train_test_split(x1,y,test_size=0.2,random_state=10)"],"metadata":{"id":"SCB0qH3_da06","executionInfo":{"status":"ok","timestamp":1699717408079,"user_tz":-330,"elapsed":4,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"}}},"id":"SCB0qH3_da06","execution_count":13,"outputs":[]},{"cell_type":"markdown","source":["## Model Building and predition on 'testing data' using DecisionTreeRegressor"],"metadata":{"id":"cUt5Z5XyYi0S"},"id":"cUt5Z5XyYi0S"},{"cell_type":"code","source":["tree_reg = DecisionTreeRegressor(criterion = 'squared_error', max_depth=2)\n","tree_reg.fit(x_train,y_train)\n","y_pred_test=tree_reg.predict(x_test)\n","y_pred_test\n","\n","## So these are the'prices in dollars' predicted by our \"Linear Regression Model\" for x_test dataset"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1X0YtrOgUcoZ","executionInfo":{"status":"ok","timestamp":1699717434373,"user_tz":-330,"elapsed":493,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"}},"outputId":"3fe07e5e-d8b9-43f7-d2bf-51305791a68c"},"id":"1X0YtrOgUcoZ","execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([163.28235294, 227.91764706, 163.28235294, 100.22142857,\n","       163.28235294, 155.74418605, 100.22142857, 227.91764706,\n","       100.22142857, 100.22142857, 100.22142857, 163.28235294,\n","       155.74418605, 100.22142857, 100.22142857, 155.74418605,\n","       100.22142857, 100.22142857, 155.74418605, 100.22142857,\n","       163.28235294, 227.91764706, 100.22142857, 227.91764706,\n","       100.22142857, 163.28235294, 163.28235294, 163.28235294,\n","       227.91764706, 100.22142857, 227.91764706, 155.74418605,\n","       100.22142857, 163.28235294, 227.91764706, 163.28235294,\n","       100.22142857, 155.74418605, 227.91764706, 163.28235294,\n","       163.28235294, 163.28235294, 227.91764706, 100.22142857,\n","       100.22142857, 100.22142857, 100.22142857, 100.22142857,\n","       227.91764706, 100.22142857, 163.28235294, 163.28235294,\n","       100.22142857, 227.91764706, 227.91764706, 100.22142857,\n","       100.22142857, 100.22142857, 227.91764706, 100.22142857,\n","       163.28235294, 100.22142857, 100.22142857, 100.22142857,\n","       100.22142857, 227.91764706, 155.74418605, 100.22142857,\n","       163.28235294, 100.22142857, 227.91764706, 163.28235294,\n","       100.22142857, 100.22142857, 227.91764706, 227.91764706,\n","       163.28235294, 163.28235294, 100.22142857, 163.28235294,\n","       155.74418605, 100.22142857, 227.91764706, 155.74418605,\n","       163.28235294, 163.28235294, 163.28235294, 100.22142857,\n","       100.22142857])"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","execution_count":15,"id":"fa9ba239","metadata":{"id":"fa9ba239","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699717472934,"user_tz":-330,"elapsed":497,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"}},"outputId":"4d3e9e60-ca0a-466f-82fe-3512b050167e"},"outputs":[{"output_type":"stream","name":"stdout","text":["(353, 10) (89, 10) (353,) (89,)\n"]}],"source":["print(x_train.shape,x_test.shape,y_train.shape,y_test.shape)"]},{"cell_type":"code","source":["from sklearn.metrics import r2_score, mean_squared_error, explained_variance_score, mean_absolute_error\n","\n","mse = mean_squared_error(y_pred_test, y_test)\n","r2 = r2_score(y_pred_test, y_test)\n","expl_var = explained_variance_score(y_pred_test, y_test)\n","mae = mean_absolute_error(y_pred_test, y_test)\n","\n","# Print evaluation metrics for testing set\n","print('Test Mean Squared Error: {:.2f}'.format(mse))\n","print('Test R-Squared: {:.2f}'.format(r2))\n","print('Test Explained Variance Score: {:.2f}'.format(expl_var))\n","print('Test Mean Absolute Error: {:.2f}'.format(mae))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9O2rV7d8UjJh","executionInfo":{"status":"ok","timestamp":1699717478219,"user_tz":-330,"elapsed":9,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"}},"outputId":"6c89c7d0-dc11-411b-de1d-3188b816037c"},"id":"9O2rV7d8UjJh","execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Test Mean Squared Error: 3381.92\n","Test R-Squared: -0.45\n","Test Explained Variance Score: -0.45\n","Test Mean Absolute Error: 46.81\n"]}]},{"cell_type":"code","source":["print(y_pred_test-y_test)\n","print(max(y_pred_test-y_test))\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y-wYqVhRStvD","executionInfo":{"status":"ok","timestamp":1699717478887,"user_tz":-330,"elapsed":5,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"}},"outputId":"d6fe167d-8785-4ac1-fcbc-a0e9204631db"},"id":"Y-wYqVhRStvD","execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["119    -36.717647\n","207     25.917647\n","236     96.282353\n","288     20.221429\n","174     12.282353\n","          ...    \n","37    -112.717647\n","66      13.282353\n","305     39.282353\n","308    -13.778571\n","12     -78.778571\n","Name: target, Length: 89, dtype: float64\n","175.91764705882352\n"]}]},{"cell_type":"code","source":["sns.distplot(y_pred_test-y_test);      ## ytest-ypred = error/residuals"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":640},"id":"54HzsqVFQpG8","executionInfo":{"status":"ok","timestamp":1699717481308,"user_tz":-330,"elapsed":523,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"}},"outputId":"bc4ccb8f-6a3b-4e18-8bda-8da331ab42ee"},"id":"54HzsqVFQpG8","execution_count":19,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-19-7edcc90935e1>:1: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(y_pred_test-y_test);      ## ytest-ypred = error/residuals\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## Plot the decision tree graph"],"metadata":{"id":"b59yKRpgDo7v"},"id":"b59yKRpgDo7v"},{"cell_type":"code","source":["export_graphviz(tree_reg, out_file= \"diabetes_tree.dot\", max_depth=2, feature_names= diabetes.feature_names, class_names = diabetes.target, rounded=True, filled=True)\n","\n","with open(\"diabetes_tree.dot\") as f:\n","  d_graph=f.read()\n","Source(d_graph)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":380},"id":"PqlLY9xyfb_Q","executionInfo":{"status":"ok","timestamp":1699717497233,"user_tz":-330,"elapsed":10,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"}},"outputId":"fda79b05-1729-42d4-d6ab-4cc465d6eceb"},"id":"PqlLY9xyfb_Q","execution_count":20,"outputs":[{"output_type":"execute_result","data":{"image/svg+xml":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: Tree Pages: 1 -->\n<svg width=\"754pt\" height=\"269pt\"\n viewBox=\"0.00 0.00 754.00 269.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 265)\">\n<title>Tree</title>\n<polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-265 750,-265 750,4 -4,4\"/>\n<!-- 0 -->\n<g id=\"node1\" class=\"node\">\n<title>0</title>\n<path fill=\"#f4cbad\" stroke=\"black\" d=\"M443.5,-261C443.5,-261 301.5,-261 301.5,-261 295.5,-261 289.5,-255 289.5,-249 289.5,-249 289.5,-205 289.5,-205 289.5,-199 295.5,-193 301.5,-193 301.5,-193 443.5,-193 443.5,-193 449.5,-193 455.5,-199 455.5,-205 455.5,-205 455.5,-249 455.5,-249 455.5,-255 449.5,-261 443.5,-261\"/>\n<text text-anchor=\"middle\" x=\"372.5\" y=\"-245.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">s5 &lt;= &#45;0.004</text>\n<text text-anchor=\"middle\" x=\"372.5\" y=\"-230.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">squared_error = 5845.82</text>\n<text text-anchor=\"middle\" x=\"372.5\" y=\"-215.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 353</text>\n<text text-anchor=\"middle\" x=\"372.5\" y=\"-200.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = 152.918</text>\n</g>\n<!-- 1 -->\n<g id=\"node2\" class=\"node\">\n<title>1</title>\n<path fill=\"#fcf2eb\" stroke=\"black\" d=\"M352,-157C352,-157 203,-157 203,-157 197,-157 191,-151 191,-145 191,-145 191,-101 191,-101 191,-95 197,-89 203,-89 203,-89 352,-89 352,-89 358,-89 364,-95 364,-101 364,-101 364,-145 364,-145 364,-151 358,-157 352,-157\"/>\n<text text-anchor=\"middle\" x=\"277.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">bmi &lt;= 0.13</text>\n<text text-anchor=\"middle\" x=\"277.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">squared_error = 3179.573</text>\n<text text-anchor=\"middle\" x=\"277.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 183</text>\n<text text-anchor=\"middle\" x=\"277.5\" y=\"-96.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = 113.268</text>\n</g>\n<!-- 0&#45;&gt;1 -->\n<g id=\"edge1\" class=\"edge\">\n<title>0&#45;&gt;1</title>\n<path fill=\"none\" stroke=\"black\" d=\"M341.66,-192.88C333.28,-183.89 324.11,-174.04 315.39,-164.68\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"317.89,-162.23 308.51,-157.3 312.77,-167 317.89,-162.23\"/>\n<text text-anchor=\"middle\" x=\"307.63\" y=\"-178.58\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">True</text>\n</g>\n<!-- 4 -->\n<g id=\"node5\" class=\"node\">\n<title>4</title>\n<path fill=\"#eca16b\" stroke=\"black\" d=\"M539.5,-157C539.5,-157 397.5,-157 397.5,-157 391.5,-157 385.5,-151 385.5,-145 385.5,-145 385.5,-101 385.5,-101 385.5,-95 391.5,-89 397.5,-89 397.5,-89 539.5,-89 539.5,-89 545.5,-89 551.5,-95 551.5,-101 551.5,-101 551.5,-145 551.5,-145 551.5,-151 545.5,-157 539.5,-157\"/>\n<text text-anchor=\"middle\" x=\"468.5\" y=\"-141.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">bmi &lt;= 0.311</text>\n<text text-anchor=\"middle\" x=\"468.5\" y=\"-126.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">squared_error = 5201.84</text>\n<text text-anchor=\"middle\" x=\"468.5\" y=\"-111.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 170</text>\n<text text-anchor=\"middle\" x=\"468.5\" y=\"-96.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = 195.6</text>\n</g>\n<!-- 0&#45;&gt;4 -->\n<g id=\"edge4\" class=\"edge\">\n<title>0&#45;&gt;4</title>\n<path fill=\"none\" stroke=\"black\" d=\"M403.67,-192.88C412.14,-183.89 421.4,-174.04 430.21,-164.68\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"432.85,-166.98 437.16,-157.3 427.76,-162.18 432.85,-166.98\"/>\n<text text-anchor=\"middle\" x=\"437.92\" y=\"-178.59\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">False</text>\n</g>\n<!-- 2 -->\n<g id=\"node3\" class=\"node\">\n<title>2</title>\n<path fill=\"#ffffff\" stroke=\"black\" d=\"M161,-53C161,-53 12,-53 12,-53 6,-53 0,-47 0,-41 0,-41 0,-12 0,-12 0,-6 6,0 12,0 12,0 161,0 161,0 167,0 173,-6 173,-12 173,-12 173,-41 173,-41 173,-47 167,-53 161,-53\"/>\n<text text-anchor=\"middle\" x=\"86.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">squared_error = 2181.501</text>\n<text text-anchor=\"middle\" x=\"86.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 140</text>\n<text text-anchor=\"middle\" x=\"86.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = 100.221</text>\n</g>\n<!-- 1&#45;&gt;2 -->\n<g id=\"edge2\" class=\"edge\">\n<title>1&#45;&gt;2</title>\n<path fill=\"none\" stroke=\"black\" d=\"M210.7,-88.95C190.08,-78.75 167.5,-67.57 147.31,-57.59\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"148.73,-54.38 138.21,-53.09 145.63,-60.66 148.73,-54.38\"/>\n</g>\n<!-- 3 -->\n<g id=\"node4\" class=\"node\">\n<title>3</title>\n<path fill=\"#f4c8a9\" stroke=\"black\" d=\"M352,-53C352,-53 203,-53 203,-53 197,-53 191,-47 191,-41 191,-41 191,-12 191,-12 191,-6 197,0 203,0 203,0 352,0 352,0 358,0 364,-6 364,-12 364,-12 364,-41 364,-41 364,-47 358,-53 352,-53\"/>\n<text text-anchor=\"middle\" x=\"277.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">squared_error = 4070.702</text>\n<text text-anchor=\"middle\" x=\"277.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 43</text>\n<text text-anchor=\"middle\" x=\"277.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = 155.744</text>\n</g>\n<!-- 1&#45;&gt;3 -->\n<g id=\"edge3\" class=\"edge\">\n<title>1&#45;&gt;3</title>\n<path fill=\"none\" stroke=\"black\" d=\"M277.5,-88.95C277.5,-80.72 277.5,-71.85 277.5,-63.48\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"281,-63.24 277.5,-53.24 274,-63.24 281,-63.24\"/>\n</g>\n<!-- 5 -->\n<g id=\"node6\" class=\"node\">\n<title>5</title>\n<path fill=\"#f2c19d\" stroke=\"black\" d=\"M543,-53C543,-53 394,-53 394,-53 388,-53 382,-47 382,-41 382,-41 382,-12 382,-12 382,-6 388,0 394,0 394,0 543,0 543,0 549,0 555,-6 555,-12 555,-12 555,-41 555,-41 555,-47 549,-53 543,-53\"/>\n<text text-anchor=\"middle\" x=\"468.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">squared_error = 4264.767</text>\n<text text-anchor=\"middle\" x=\"468.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 85</text>\n<text text-anchor=\"middle\" x=\"468.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = 163.282</text>\n</g>\n<!-- 4&#45;&gt;5 -->\n<g id=\"edge5\" class=\"edge\">\n<title>4&#45;&gt;5</title>\n<path fill=\"none\" stroke=\"black\" d=\"M468.5,-88.95C468.5,-80.72 468.5,-71.85 468.5,-63.48\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"472,-63.24 468.5,-53.24 465,-63.24 472,-63.24\"/>\n</g>\n<!-- 6 -->\n<g id=\"node7\" class=\"node\">\n<title>6</title>\n<path fill=\"#e58139\" stroke=\"black\" d=\"M734,-53C734,-53 585,-53 585,-53 579,-53 573,-47 573,-41 573,-41 573,-12 573,-12 573,-6 579,0 585,0 585,0 734,0 734,0 740,0 746,-6 746,-12 746,-12 746,-41 746,-41 746,-47 740,-53 734,-53\"/>\n<text text-anchor=\"middle\" x=\"659.5\" y=\"-37.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">squared_error = 4050.052</text>\n<text text-anchor=\"middle\" x=\"659.5\" y=\"-22.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 85</text>\n<text text-anchor=\"middle\" x=\"659.5\" y=\"-7.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = 227.918</text>\n</g>\n<!-- 4&#45;&gt;6 -->\n<g id=\"edge6\" class=\"edge\">\n<title>4&#45;&gt;6</title>\n<path fill=\"none\" stroke=\"black\" d=\"M535.3,-88.95C555.92,-78.75 578.5,-67.57 598.69,-57.59\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"600.37,-60.66 607.79,-53.09 597.27,-54.38 600.37,-60.66\"/>\n</g>\n</g>\n</svg>\n","text/plain":["<graphviz.sources.Source at 0x79e003b2ace0>"]},"metadata":{},"execution_count":20}]},{"cell_type":"markdown","source":[],"metadata":{"id":"NCH9GtlDgbSG"},"id":"NCH9GtlDgbSG"}],"metadata":{"hide_input":false,"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.12"},"toc":{"base_numbering":1,"nav_menu":{},"number_sections":true,"sideBar":true,"skip_h1_title":false,"title_cell":"Table of Contents","title_sidebar":"Contents","toc_cell":false,"toc_position":{},"toc_section_display":true,"toc_window_display":false},"colab":{"provenance":[{"file_id":"1uHCNkC7azwixNaTUfzwc9byrnEW4VAIT","timestamp":1696310606500}]}},"nbformat":4,"nbformat_minor":5}