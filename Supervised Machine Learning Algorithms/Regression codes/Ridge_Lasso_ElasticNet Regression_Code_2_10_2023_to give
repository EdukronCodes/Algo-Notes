{"cells":[{"cell_type":"markdown","metadata":{"id":"a722bbe8"},"source":["# Ridge, Lasso Regularization and Elastic net"],"id":"a722bbe8"},{"cell_type":"markdown","metadata":{"id":"yrZTTqLXd1e7"},"source":["\n","*   <b>Ridge Regularization (L2 Regularization):</b>\n","\n","   **Objective:** Ridge regularization is used to prevent overfitting in machine learning models by adding a penalty term to the loss function. It encourages smaller coefficients by adding the sum of the squares of the coefficients to the cost function.\n","\n","  <b>Cost Function:</b> The cost function with Ridge regularization is typically represented as follows:\n","\n","  *J(θ) = MSE(θ) + αΣ(θi^2)*\n","\n","  Where:\n","\n","  θ: Model coefficients.\n","\n"," <b>MSE(θ):</b> Mean Squared Error (the standard loss).\n","\n","  **α: Regularization strength parameter**. Higher values of α result in stronger regularization.\n","\n","\n","\n","*   **Lasso Regularization (L1 Regularization):**\n","\n","  Objective: Lasso regularization is another technique to prevent overfitting by adding a penalty term to the loss function. It encourages sparsity in the model by adding the sum of the absolute values of the coefficients to the cost function.\n","  Cost Function: The cost function with Lasso regularization is typically represented as follows:\n","\n","  Where:\n","  <b> θ: Model coefficients.\n","  MSE(θ): Mean Squared Error (the standard loss)</b>\n","  \n","  <b> α: Regularization strength parameter. Higher values of α result in stronger regularization.</b>\n","\n","\n","*   Elastic Net Regularization:\n","\n","  Objective: Elastic Net is a combination of Ridge and Lasso\n","  regularization. It adds a penalty term that is a linear combination of both the Ridge and Lasso penalties, controlled by a mixing parameter (ρ).\n","  Cost Function: The cost function with Elastic Net regularization is typically represented as follows:\n","\n","  <b>J(θ) = MSE(θ) + α(ρΣ(θi^2) + (1-ρ)Σ|θi|)</b>\n","\n","  Where:\n","  <b>θ: Model coefficients </b>.\n","\n","  <b>MSE(θ): Mean Squared Error (the standard loss).</b>\n","\n","  <b>α: Regularization strength parameter</b>. Higher values of α result in stronger regularization.\n","\n","  <b>ρ: Mixing parameter </b>, that controls the balance between Ridge and Lasso regularization. When ρ = 0, it's equivalent to Lasso; when ρ = 1, it's equivalent to Ridge.\n","\n","\n","\n","*   In summary, Ridge, Lasso, and Elastic Net are regularization techniques  \n","  that help control the complexity of machine learning models by adding penalty terms to the cost function. Ridge discourages large coefficients, Lasso encourages sparsity, and Elastic Net combines aspects of both techniques. The choice of which technique to use depends on the specific characteristics of the data and the problem being addressed."],"id":"yrZTTqLXd1e7"},{"cell_type":"markdown","metadata":{"id":"779042a8"},"source":["# Import Packages"],"id":"779042a8"},{"cell_type":"code","execution_count":1,"metadata":{"executionInfo":{"elapsed":1912,"status":"ok","timestamp":1699367766851,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"},"user_tz":-330},"id":"7f026428"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import sklearn.datasets\n","from sklearn.linear_model import LinearRegression\n","from sklearn.linear_model import Ridge\n","from sklearn.linear_model import Lasso\n","from sklearn.linear_model import ElasticNet\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn import metrics\n","\n","\n"],"id":"7f026428"},{"cell_type":"markdown","metadata":{"id":"e95c1a05"},"source":["## Importing the USA_housing dataset from Kaggle:\n","### Link: https://www.kaggle.com/datasets/vedavyasv/usa-housing\n"],"id":"e95c1a05"},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":10,"status":"ok","timestamp":1699367908319,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"},"user_tz":-330},"id":"RcqQD3o7Q30s","outputId":"928a9672-981b-4432-9fb2-329706619c26"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Avg. Area Income  Avg. Area House Age  Avg. Area Number of Rooms  \\\n","0       79545.45857             5.682861                   7.009188   \n","1       79248.64245             6.002900                   6.730821   \n","2       61287.06718             5.865890                   8.512727   \n","3       63345.24005             7.188236                   5.586729   \n","4       59982.19723             5.040555                   7.839388   \n","\n","   Avg. Area Number of Bedrooms  Area Population         Price  \n","0                          4.09      23086.80050  1.059034e+06  \n","1                          3.09      40173.07217  1.505891e+06  \n","2                          5.13      36882.15940  1.058988e+06  \n","3                          3.26      34310.24283  1.260617e+06  \n","4                          4.23      26354.10947  6.309435e+05  "],"text/html":["\n","  <div id=\"df-8ad268e3-9a56-4c23-93b1-0b1154dee31b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Avg. Area Income</th>\n","      <th>Avg. Area House Age</th>\n","      <th>Avg. Area Number of Rooms</th>\n","      <th>Avg. Area Number of Bedrooms</th>\n","      <th>Area Population</th>\n","      <th>Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>79545.45857</td>\n","      <td>5.682861</td>\n","      <td>7.009188</td>\n","      <td>4.09</td>\n","      <td>23086.80050</td>\n","      <td>1.059034e+06</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>79248.64245</td>\n","      <td>6.002900</td>\n","      <td>6.730821</td>\n","      <td>3.09</td>\n","      <td>40173.07217</td>\n","      <td>1.505891e+06</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>61287.06718</td>\n","      <td>5.865890</td>\n","      <td>8.512727</td>\n","      <td>5.13</td>\n","      <td>36882.15940</td>\n","      <td>1.058988e+06</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>63345.24005</td>\n","      <td>7.188236</td>\n","      <td>5.586729</td>\n","      <td>3.26</td>\n","      <td>34310.24283</td>\n","      <td>1.260617e+06</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>59982.19723</td>\n","      <td>5.040555</td>\n","      <td>7.839388</td>\n","      <td>4.23</td>\n","      <td>26354.10947</td>\n","      <td>6.309435e+05</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8ad268e3-9a56-4c23-93b1-0b1154dee31b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8ad268e3-9a56-4c23-93b1-0b1154dee31b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8ad268e3-9a56-4c23-93b1-0b1154dee31b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-245fcef8-41bd-4570-9fc5-016e59b16993\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-245fcef8-41bd-4570-9fc5-016e59b16993')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-245fcef8-41bd-4570-9fc5-016e59b16993 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":2}],"source":["df=pd.read_csv(r\"/content/USA_Housing.csv\")\n","df.head()"],"id":"RcqQD3o7Q30s"},{"cell_type":"markdown","source":["#### Checking the shape of Dataframe"],"metadata":{"id":"_RCMSV2RORmo"},"id":"_RCMSV2RORmo"},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":693,"status":"ok","timestamp":1699367967389,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"},"user_tz":-330},"id":"GJy3cS_iA4XL","outputId":"89a130bb-9543-4e32-8ab5-cbd2ae307740"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5000, 6)"]},"metadata":{},"execution_count":5}],"source":["df.shape"],"id":"GJy3cS_iA4XL"},{"cell_type":"markdown","source":["#### Check for missing values"],"metadata":{"id":"gxIqZ3NNOblB"},"id":"gxIqZ3NNOblB"},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":417,"status":"ok","timestamp":1699368016090,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"},"user_tz":-330},"id":"LnYtcWlh3OF-","outputId":"71dea42d-8b84-43b4-a376-478369873571"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Avg. Area Income                0\n","Avg. Area House Age             0\n","Avg. Area Number of Rooms       0\n","Avg. Area Number of Bedrooms    0\n","Area Population                 0\n","Price                           0\n","dtype: int64"]},"metadata":{},"execution_count":6}],"source":["df.isna().sum()"],"id":"LnYtcWlh3OF-"},{"cell_type":"markdown","source":["#### Statistical measure of the dataset"],"metadata":{"id":"0IWNhRndOkfp"},"id":"0IWNhRndOkfp"},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"elapsed":407,"status":"ok","timestamp":1699368043063,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"},"user_tz":-330},"id":"B6a7WWvtA_0Z","outputId":"fba5ccec-36a0-45bd-b854-cdc00639e466"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Avg. Area Income  Avg. Area House Age  Avg. Area Number of Rooms  \\\n","count       5000.000000          5000.000000                5000.000000   \n","mean       68583.108984             5.977222                   6.987792   \n","std        10657.991214             0.991456                   1.005833   \n","min        17796.631190             2.644304                   3.236194   \n","25%        61480.562390             5.322283                   6.299250   \n","50%        68804.286405             5.970429                   7.002902   \n","75%        75783.338665             6.650808                   7.665871   \n","max       107701.748400             9.519088                  10.759588   \n","\n","       Avg. Area Number of Bedrooms  Area Population         Price  \n","count                   5000.000000      5000.000000  5.000000e+03  \n","mean                       3.981330     36163.516039  1.232073e+06  \n","std                        1.234137      9925.650114  3.531176e+05  \n","min                        2.000000       172.610686  1.593866e+04  \n","25%                        3.140000     29403.928700  9.975771e+05  \n","50%                        4.050000     36199.406690  1.232669e+06  \n","75%                        4.490000     42861.290770  1.471210e+06  \n","max                        6.500000     69621.713380  2.469066e+06  "],"text/html":["\n","  <div id=\"df-08484218-eb8a-450e-93cc-ae2acb33c83f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Avg. Area Income</th>\n","      <th>Avg. Area House Age</th>\n","      <th>Avg. Area Number of Rooms</th>\n","      <th>Avg. Area Number of Bedrooms</th>\n","      <th>Area Population</th>\n","      <th>Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>5000.000000</td>\n","      <td>5000.000000</td>\n","      <td>5000.000000</td>\n","      <td>5000.000000</td>\n","      <td>5000.000000</td>\n","      <td>5.000000e+03</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>68583.108984</td>\n","      <td>5.977222</td>\n","      <td>6.987792</td>\n","      <td>3.981330</td>\n","      <td>36163.516039</td>\n","      <td>1.232073e+06</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>10657.991214</td>\n","      <td>0.991456</td>\n","      <td>1.005833</td>\n","      <td>1.234137</td>\n","      <td>9925.650114</td>\n","      <td>3.531176e+05</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>17796.631190</td>\n","      <td>2.644304</td>\n","      <td>3.236194</td>\n","      <td>2.000000</td>\n","      <td>172.610686</td>\n","      <td>1.593866e+04</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>61480.562390</td>\n","      <td>5.322283</td>\n","      <td>6.299250</td>\n","      <td>3.140000</td>\n","      <td>29403.928700</td>\n","      <td>9.975771e+05</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>68804.286405</td>\n","      <td>5.970429</td>\n","      <td>7.002902</td>\n","      <td>4.050000</td>\n","      <td>36199.406690</td>\n","      <td>1.232669e+06</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>75783.338665</td>\n","      <td>6.650808</td>\n","      <td>7.665871</td>\n","      <td>4.490000</td>\n","      <td>42861.290770</td>\n","      <td>1.471210e+06</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>107701.748400</td>\n","      <td>9.519088</td>\n","      <td>10.759588</td>\n","      <td>6.500000</td>\n","      <td>69621.713380</td>\n","      <td>2.469066e+06</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-08484218-eb8a-450e-93cc-ae2acb33c83f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-08484218-eb8a-450e-93cc-ae2acb33c83f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-08484218-eb8a-450e-93cc-ae2acb33c83f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-25ff167b-084d-46bc-a59f-2fdd841d8731\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-25ff167b-084d-46bc-a59f-2fdd841d8731')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-25ff167b-084d-46bc-a59f-2fdd841d8731 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":7}],"source":["df.describe()"],"id":"B6a7WWvtA_0Z"},{"cell_type":"markdown","source":["#### Understanding the correlation between various features of dataset (Mainly measured wrt target variable (i.e. <b>'price'</b>.)"],"metadata":{"id":"G7O5LtJuOpud"},"id":"G7O5LtJuOpud"},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"executionInfo":{"elapsed":427,"status":"ok","timestamp":1699368118077,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"},"user_tz":-330},"id":"wzJsVSVQ-ZGJ","outputId":"5d14bbfa-a43a-4453-f20f-e151da9141b5"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                              Avg. Area Income  Avg. Area House Age  \\\n","Avg. Area Income                      1.000000            -0.002007   \n","Avg. Area House Age                  -0.002007             1.000000   \n","Avg. Area Number of Rooms            -0.011032            -0.009428   \n","Avg. Area Number of Bedrooms          0.019788             0.006149   \n","Area Population                      -0.016234            -0.018743   \n","Price                                 0.639734             0.452543   \n","\n","                              Avg. Area Number of Rooms  \\\n","Avg. Area Income                              -0.011032   \n","Avg. Area House Age                           -0.009428   \n","Avg. Area Number of Rooms                      1.000000   \n","Avg. Area Number of Bedrooms                   0.462695   \n","Area Population                                0.002040   \n","Price                                          0.335664   \n","\n","                              Avg. Area Number of Bedrooms  Area Population  \\\n","Avg. Area Income                                  0.019788        -0.016234   \n","Avg. Area House Age                               0.006149        -0.018743   \n","Avg. Area Number of Rooms                         0.462695         0.002040   \n","Avg. Area Number of Bedrooms                      1.000000        -0.022168   \n","Area Population                                  -0.022168         1.000000   \n","Price                                             0.171071         0.408556   \n","\n","                                 Price  \n","Avg. Area Income              0.639734  \n","Avg. Area House Age           0.452543  \n","Avg. Area Number of Rooms     0.335664  \n","Avg. Area Number of Bedrooms  0.171071  \n","Area Population               0.408556  \n","Price                         1.000000  "],"text/html":["\n","  <div id=\"df-e5a97dea-163c-4446-8e6d-36ccb4a7525c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Avg. Area Income</th>\n","      <th>Avg. Area House Age</th>\n","      <th>Avg. Area Number of Rooms</th>\n","      <th>Avg. Area Number of Bedrooms</th>\n","      <th>Area Population</th>\n","      <th>Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Avg. Area Income</th>\n","      <td>1.000000</td>\n","      <td>-0.002007</td>\n","      <td>-0.011032</td>\n","      <td>0.019788</td>\n","      <td>-0.016234</td>\n","      <td>0.639734</td>\n","    </tr>\n","    <tr>\n","      <th>Avg. Area House Age</th>\n","      <td>-0.002007</td>\n","      <td>1.000000</td>\n","      <td>-0.009428</td>\n","      <td>0.006149</td>\n","      <td>-0.018743</td>\n","      <td>0.452543</td>\n","    </tr>\n","    <tr>\n","      <th>Avg. Area Number of Rooms</th>\n","      <td>-0.011032</td>\n","      <td>-0.009428</td>\n","      <td>1.000000</td>\n","      <td>0.462695</td>\n","      <td>0.002040</td>\n","      <td>0.335664</td>\n","    </tr>\n","    <tr>\n","      <th>Avg. Area Number of Bedrooms</th>\n","      <td>0.019788</td>\n","      <td>0.006149</td>\n","      <td>0.462695</td>\n","      <td>1.000000</td>\n","      <td>-0.022168</td>\n","      <td>0.171071</td>\n","    </tr>\n","    <tr>\n","      <th>Area Population</th>\n","      <td>-0.016234</td>\n","      <td>-0.018743</td>\n","      <td>0.002040</td>\n","      <td>-0.022168</td>\n","      <td>1.000000</td>\n","      <td>0.408556</td>\n","    </tr>\n","    <tr>\n","      <th>Price</th>\n","      <td>0.639734</td>\n","      <td>0.452543</td>\n","      <td>0.335664</td>\n","      <td>0.171071</td>\n","      <td>0.408556</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5a97dea-163c-4446-8e6d-36ccb4a7525c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e5a97dea-163c-4446-8e6d-36ccb4a7525c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e5a97dea-163c-4446-8e6d-36ccb4a7525c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-944223ce-fa74-40d0-86ca-9f0a8e797323\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-944223ce-fa74-40d0-86ca-9f0a8e797323')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-944223ce-fa74-40d0-86ca-9f0a8e797323 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}],"source":["correlation=df.corr()\n","correlation"],"id":"wzJsVSVQ-ZGJ"},{"cell_type":"markdown","source":["#### Constructing the heatmap to understand it more better"],"metadata":{"id":"lkVLM3pBO7Zs"},"id":"lkVLM3pBO7Zs"},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":635},"executionInfo":{"elapsed":2128,"status":"ok","timestamp":1699368169773,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"},"user_tz":-330},"id":"RqXcRUAu-_Fw","outputId":"dac2d7b7-2f3e-4860-d7b8-7818edfb5025"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":11},{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 2 Axes>"],"image/png":"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\n"},"metadata":{}}],"source":["plt.figure(figsize=(5,5))\n","sns.heatmap(correlation, cbar=True, square=True, annot=True, annot_kws={'size':8}, fmt='0.1f', cmap='Blues' )"],"id":"RqXcRUAu-_Fw"},{"cell_type":"markdown","source":["#### Split other features from target varible, feed them separately to machine learning model to undestand the pattern."],"metadata":{"id":"XK10Mhq-PJg3"},"id":"XK10Mhq-PJg3"},{"cell_type":"code","execution_count":14,"metadata":{"executionInfo":{"elapsed":428,"status":"ok","timestamp":1699368220199,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"},"user_tz":-330},"id":"-MmpG0IYJz3r"},"outputs":[],"source":["x=df.drop('Price', axis=1)\n","y=df['Price']"],"id":"-MmpG0IYJz3r"},{"cell_type":"markdown","source":["#### Use StandardScaler feature scaling technique to transform the data more suitable for modeling"],"metadata":{"id":"das7Zaa2PVRX"},"id":"das7Zaa2PVRX"},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1699368243597,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"},"user_tz":-330},"id":"IKExpC3kL7W4","outputId":"0cb81ab2-61c6-4fed-9105-8faba1742e77"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5000, 5)"]},"metadata":{},"execution_count":15}],"source":["from sklearn.preprocessing import StandardScaler\n","scaler = StandardScaler()\n","x1 = scaler.fit_transform(x)\n","x1.shape"],"id":"IKExpC3kL7W4"},{"cell_type":"markdown","source":["#### Splitting the data into training and test data"],"metadata":{"id":"3sNO5W54PZwq"},"id":"3sNO5W54PZwq"},{"cell_type":"code","execution_count":16,"metadata":{"executionInfo":{"elapsed":8,"status":"ok","timestamp":1699368263696,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"},"user_tz":-330},"id":"SCB0qH3_da06"},"outputs":[],"source":["from sklearn.model_selection import train_test_split\n","x_train,x_test,y_train,y_test=train_test_split(x1,y,test_size=0.2,random_state=10)"],"id":"SCB0qH3_da06"},{"cell_type":"code","execution_count":17,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":387,"status":"ok","timestamp":1699368302801,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"},"user_tz":-330},"id":"fa9ba239","outputId":"b447dc51-f117-4583-db99-65cc98b7cc66"},"outputs":[{"output_type":"stream","name":"stdout","text":["(4000, 5) (1000, 5) (4000,) (1000,)\n"]}],"source":["print(x_train.shape,x_test.shape,y_train.shape,y_test.shape)"],"id":"fa9ba239"},{"cell_type":"markdown","source":["#### Model Building and predition on 'testing data' using Linear Regression first\n","\n"],"metadata":{"id":"eTq4o94jPn-d"},"id":"eTq4o94jPn-d"},{"cell_type":"code","execution_count":18,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":464,"status":"ok","timestamp":1699368319290,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"},"user_tz":-330},"id":"1X0YtrOgUcoZ","outputId":"cfee8856-3625-468a-d04a-ec743cbbb2e3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1195058.5766484 , 1185265.8151981 , 1046786.18898581,\n","        827779.10074061, 1485163.51851684,  542138.67654062,\n","       2473734.91104113, 1447749.45073271, 1322766.64704245,\n","       1137661.55594952, 1373281.53327101, 1719966.99315129,\n","       1372477.12883592,  521453.39957478, 1412349.85324112,\n","       1074289.43782778,  959129.69781909, 1125293.74914853,\n","       1281045.09633152, 1009354.62573442,  788527.61242935,\n","       1070710.3246387 , 1286070.31355429, 1054795.95466581,\n","       1248708.19977846, 1446840.10405811,  376036.04700109,\n","       1275418.65012655, 1204407.28833974, 1500191.62079217,\n","       1634136.01072073, 1579737.86368279, 1492533.30221048,\n","        380169.03594189, 1813542.15701148, 1216232.59483686,\n","       1556216.5663808 , 1070938.68281373, 1231003.48008691,\n","       1076791.63250403, 1005529.40895621, 1788883.43357401,\n","       1037652.18895094, 1435240.71199908,  833401.69241843,\n","        888585.17973893, 1135122.87345566,  906362.57347275,\n","       1315708.06070686, 1504142.03583897, 1039185.53549847,\n","       1100211.37061588, 1384869.65542029, 1200247.79385859,\n","       1434283.2189885 , 1033550.9630459 , 1308054.92671169,\n","       1040966.5307306 , 1248892.81901921, 1688966.68949657,\n","       1294565.23735208, 1154012.07629411, 1564396.41318091,\n","       1066515.06835978, 1063853.95052162, 1171627.95864916,\n","       1330809.39728163, 1396718.44420513,  914942.29436905,\n","        333028.97521518, 1237403.44778416, 1510837.76189427,\n","        644750.15159263,  890879.21661002,  561199.30051317,\n","       1413413.82337442,  472760.61538602,  856001.1682607 ,\n","       2003467.44139948, 1610624.07788024, 1298855.40909107,\n","       1563258.74835297, 1218826.13817745, 1364902.47498731,\n","       1493072.15456114, 1262157.34692484, 1080617.08347909,\n","        760089.58712348, 1592897.06835757, 1126811.03586831,\n","        861770.60911145, 1308696.32271621,  815552.13449832,\n","       1503897.13581251, 1147240.98913941, 1223929.46847607,\n","       1724150.52783672, 1330634.35791799, 1432688.86223926,\n","       1427608.45530977,  779452.86431877,  995360.44081102,\n","       1261800.00067478, 1486224.23086749, 1218782.07842717,\n","        755852.73334831, 1352259.10423135, 1185127.84175884,\n","       1324217.88839531, 1010631.87468633, 1000582.63493897,\n","       1778881.85142425, 1427335.68945275, 1271756.09605158,\n","       1412394.42094502,  897892.66297595,  929347.71354654,\n","       1331906.86758638,  731693.8554039 , 1107208.23019439,\n","       1017453.35235588,  762051.68841938, 1217293.80101576,\n","        747625.61788632, 1201468.75393735, 1757166.74572062,\n","       1432014.58750866,  984187.06081655, 1375938.18849876,\n","        609299.48159707, 1036197.19613804, 1736354.90881234,\n","       1361471.78346504, 1382330.90354208, 1568087.78644585,\n","       1270445.82835973,  885080.67818866, 1040058.30657594,\n","       1102976.25221026, 1118835.90852116, 1489732.89558371,\n","       1128255.00338327, 1646505.20331105, 1440165.69042818,\n","       1084741.99910452,  955969.23596963, 1192497.25159814,\n","       1414903.31064462, 1845356.37914503,  698862.39403009,\n","       1233742.00399156, 1511835.46418991, 1384891.62022483,\n","       1059491.07354374, 1539483.13748717, 1767648.51868568,\n","       1151210.60685267, 1218701.18505184, 1374614.04011319,\n","        966751.09244378, 1347387.24247062, 1062852.33167985,\n","        621044.9809699 , 1290526.94139662, 1123553.33951546,\n","        993429.62502492, 1072347.87201961, 1181495.30711191,\n","       1102252.08132468,  629646.78424109, 1495388.09199622,\n","       1217162.64756575, 1114602.21440873,  976992.69087688,\n","       1700640.94688664, 1391595.79243919, 1285197.26427572,\n","        729329.83948803, 1157455.80627126, 1249597.98508663,\n","        491984.92936412,  745846.74629168, 1204018.49715606,\n","       1292494.85491658, 1252895.20514791,  977031.60210511,\n","        908042.95680763, 1394565.15274421,  487958.43539535,\n","       1571770.6355744 , 1478145.40739688, 1457616.35140204,\n","       1318327.99349949, 1325392.08063422, 1481471.74645073,\n","       1460608.13911684, 1414373.63822324, 1359773.67811362,\n","        528380.6818972 , 1060647.64527177, 1289435.48299301,\n","       1823929.4426082 , 1421593.27304987, 1794401.02841101,\n","        669908.43081158, 1270861.37348321,  988002.49551998,\n","       1541541.58367898,  467777.72696015, 1771003.64761328,\n","       1424864.17737701, 1683483.08621167, 1184964.84977151,\n","       1111399.92051931, 1213277.96437594, 1106829.68772654,\n","       1153682.50923153, 1076046.46721555, 1751807.27779509,\n","        665213.58660973, 1450168.34186704,  820891.89451739,\n","       1349511.89491772, 1550570.64758261, 1164113.01627038,\n","       1274478.96613901, 2047647.67055285, 1245398.74511196,\n","       1084428.25248421,  969761.79124765, 1373249.70775701,\n","       1540610.4224903 , 1231016.04887979,  801603.76829244,\n","        680685.62679795,  953325.23647651, 1842412.87253766,\n","       1722437.61352822, 1118027.19465155, 1691916.5017028 ,\n","        991567.19495075, 1229973.46405896, 1267269.75957384,\n","       1231312.39981354,  895071.98258199, 1172186.6150109 ,\n","        847063.93897722,  721226.52068708, 1532621.92037776,\n","       1559621.82283122,  952447.48748881,  855567.90916136,\n","       1171717.7475617 , 1024553.301055  , 1636578.25551322,\n","       1913593.35008848, 1285506.78665926, 1365864.18851852,\n","        856254.9077304 , 1509127.38242602, 1449341.92644881,\n","       1048347.39576274, 1482996.93552364, 1461969.1563777 ,\n","       1233203.30870871, 1336076.08125952, 1327331.03759934,\n","        878088.42660883, 1661396.19960217,  871897.21925155,\n","       1124273.2833384 , 1580336.55288923, 1413410.62066812,\n","       1353314.12356234,  769163.74501021,  752579.61664809,\n","       1351468.49178681, 1491711.74577154, 1139155.50102773,\n","        896717.76362324,  926902.46460884, 1778576.70468101,\n","       1585044.7525662 , 1035045.42672554, 1584427.98989176,\n","        874420.55744049, 1624961.36869903, 1448306.886505  ,\n","       1436306.48207298,  718171.41251315, 1277691.69402523,\n","       1881894.44916849, 1116483.51799991, 1096351.61897582,\n","       1213579.73666421, 1530585.59305082, 1565904.91854711,\n","        753780.87620542,  505041.23448239, 1045713.7256929 ,\n","       1258357.19895775,  784961.76786365, 1092107.65574446,\n","        893870.40086722, 1382887.18448873,  829553.97827551,\n","       1185215.26110935,  802134.417191  ,  488465.59773302,\n","       1217667.90580879,  722036.64204985,  566381.87546651,\n","       1409555.19414995, 1233914.00775661, 1093973.51592807,\n","       1606700.67998571, 1791955.89699667, 1572028.14117199,\n","       1730135.42991193,  784899.05218576, 1061285.92872065,\n","       1638238.62298563, 1103239.70882935,  792443.05132179,\n","       1119166.28702551, 1622171.08160828, 1462488.92202411,\n","       1706096.32054494, 1697996.4133488 , 1506299.32802935,\n","       1290891.22298808,  950818.97139988, 1039104.11360581,\n","       1283267.10310863, 1311278.71082268, 1182723.96014194,\n","       1325244.23530477, 1787177.6441768 ,  962368.26704684,\n","        691812.11004223, 1442462.59679138, 1675570.54252723,\n","       1761084.38193292,  765749.4389144 , 1792479.49496833,\n","       1410063.16464159,  975124.12159134,  769210.25053378,\n","       1174064.28424197, 1523413.22725143, 1937512.82560512,\n","       1104627.76877165, 1449504.2739061 , 1253235.75432522,\n","       1403817.31023363, 1407125.94942984, 1146656.47617267,\n","        704742.4489652 , 1339721.44825524, 1091783.12303922,\n","       1147727.81632387, 1154659.23209861, 1804807.12638965,\n","       1428688.76643717, 1522325.20325309,  373900.68011691,\n","       1409569.76631869, 1331678.11631696, 1413101.42457925,\n","       1114768.02740697, 1187217.90419182, 1506029.70651381,\n","       1901667.82874386, 1821988.51189116,  847757.42997927,\n","       1139369.61014088,  802649.02676258,  786729.90181963,\n","       1665062.62020141,  966646.78803646,  934159.49915156,\n","       1557883.54438815, 1669020.47943582, 1251764.46764543,\n","        789766.97956789,  734770.82381523, 1363841.47842377,\n","        407841.88597094, 1318130.97999143,  846778.28133104,\n","       1069573.11675777, 1393202.39936192,  790032.31009057,\n","        885951.48609047, 1132539.45757882, 1417318.81778378,\n","       1231225.2148102 ,  910906.4395807 , 1276735.83778011,\n","        883993.0729046 , 1826394.03905855, 1336394.89297168,\n","       1727137.12246139, 1327514.34067161, 1914583.84892589,\n","        929171.46640663, 1462740.78208335,  885889.95340904,\n","       1477620.83342273, 1667498.45051537, 1292556.30814924,\n","       1615919.93721386, 1371473.12364737, 1738295.926028  ,\n","       1692249.69013382,  858420.16752197, 1225186.96575809,\n","        803530.15874518, 1431148.07996677, 1166350.4746163 ,\n","       1314617.37190766, 1092391.09684457,  871480.58382582,\n","       1009735.38408868, 1279853.32622971, 1736647.92685837,\n","       1041044.60043823,  639121.36770345, 1387572.53929314,\n","       2199142.63564158, 1081554.26246952, 1578528.99501793,\n","       1314911.20773687, 1097746.32198936, 1196931.00371364,\n","       1230248.96254024, 1475972.5989359 , 1366322.36729893,\n","       1530522.07662222, 1281046.04088433, 1233521.57975382,\n","       1047262.07685898, 1491890.5979968 , 1097443.5704744 ,\n","       1584297.40712917, 1061903.69163973,  988280.54351003,\n","       1460547.60071016,  965854.4516805 , 1615465.76698346,\n","        441547.28747329,  959326.76700571, 1603410.07605664,\n","        666577.70224118,  748401.34178654, 1580973.8270185 ,\n","       1227838.09836978, 1227758.00192356,  985455.15091875,\n","       1341368.57449625, 1397480.4377193 , 1510059.54316338,\n","       1436094.46155239,  991178.28301573, 1321218.78907945,\n","       1771135.15395065, 1776726.01685079, 1322751.77301929,\n","       1307253.90103268,  844980.0374987 , 1300490.85874726,\n","       1141445.98810942, 1142387.50947482, 1579611.5240484 ,\n","        610360.46656828,  623945.08564453,  912686.0057786 ,\n","       1553399.33061401,  934875.91311126, 1738198.00130373,\n","       1575442.11582361,  951146.65059685,  930251.51828099,\n","        860711.89589884, 1005363.80537825, 1355288.74551842,\n","        875461.18800863, 1001224.22891085, 1563905.73504651,\n","       1359137.99870768, 1665197.23343937, 1319548.81354586,\n","        827023.93339318, 1448549.72761383, 1181161.40771853,\n","       1108823.69155814, 1536306.9946533 , 1259041.27956929,\n","       1288042.12622506, 1182657.65961731, 1250424.47322175,\n","       1004472.74878353, 1503669.17081826, 1186069.73563441,\n","       1134312.5891917 , 1050542.12940937,  990973.96544955,\n","       1819252.01834585,  897154.43330876, 1313135.48558571,\n","       1765273.45885216, 1173059.32529778,  936366.12928373,\n","        772910.15890272, 1600686.76705783, 1356394.36425282,\n","       1410998.35160996,  803303.10252051,  985533.65672994,\n","        816083.34753943, 1254913.19403782, 1230706.92588221,\n","       1755963.37328469, 1316184.62574551,  916355.24855333,\n","       1332089.66579787,  860628.70492845, 1053170.86182036,\n","       1120691.63402558,  610128.42982941,  790283.06454698,\n","       2271981.81145851, 1415883.86488287, 1513508.10575318,\n","       1798228.55344999, 1135148.18016241, 1362482.39619026,\n","       1876486.03912066,  787174.26316386, 1055765.75051823,\n","       1232876.10200733, 1498132.04804613, 1068430.21458121,\n","       1340439.18671928, 1346462.6876253 , 1045332.65370493,\n","       1035680.76419092, 1169395.96568796, 1377505.95674615,\n","        929451.09611927, 1080377.20572584, 1107376.45151133,\n","       1198885.31062133,  750621.93157786, 1044919.14393599,\n","       1499130.19529522, 1116873.97633926, 1484985.73993549,\n","       1693004.22658774, 1487089.52656864, 1446296.33979191,\n","        693295.22273986, 1054960.01929472, 1289744.45744124,\n","       1792707.15794446,  971130.87599666,  978488.46642156,\n","        759408.0847542 ,  989676.61696839,  932687.96353949,\n","        817199.51056217, 1814428.61595848, 1858419.7614873 ,\n","       1044828.28573176, 1115401.76310992, 1560018.23922982,\n","       1152191.23153047,  855448.41454658, 1191827.00328909,\n","       1282784.9185267 ,  775535.20206806, 1553712.50898636,\n","        777849.31497459,  662675.28597126,  522544.10167491,\n","       1903493.4539921 , 1067089.79368958, 1346662.38428321,\n","       1125924.40861057, 1297707.52036604, 1343877.11270233,\n","       1360410.66834314, 1244552.86543591, 1124384.64584807,\n","        795960.790605  ,  910073.98214878, 1714821.10511811,\n","       1473647.7836917 , 1186136.28187748, 1035385.55634229,\n","       1892106.42112604,  935768.56627987, 1323424.1216617 ,\n","        980458.45021021,  917935.80547886, 1374669.99218141,\n","       1298483.79924955, 1033799.14704783, 1109895.76209793,\n","       1365892.36899816,  829682.9304889 , 1036223.70886084,\n","       1508763.96045939, 1773905.44054045,  885468.3941633 ,\n","       1254726.40061113, 1074116.32196249, 1274312.13378926,\n","        718631.77104295,  758905.59942977, 1457437.90146783,\n","        598326.68989451,  786118.33698122,  428097.68504512,\n","       1225146.37618586, 1416459.00647799, 1029672.18574606,\n","        653626.37678186, 1328334.54406068, 1334569.66776321,\n","        981056.183357  , 1817937.04943664, 1364492.53116716,\n","        508361.7207938 , 1127646.96860367, 1103760.50993821,\n","       1438085.5293011 ,  900214.66726762, 1382383.79999244,\n","        808121.97692658,  726853.42976316, 1412001.74114663,\n","        611872.24279811,  783697.11873472, 1346839.17678493,\n","       1607953.19455499,  860733.95173741,  888753.38607158,\n","       1632842.5821514 , 1738987.35169121, 1354518.52674356,\n","       1218099.1877306 ,  843649.61750853, 1284796.25670335,\n","       1308771.99836039, 1300830.28690991,  812867.37262271,\n","       1472554.62151762, 1371160.49994327, 1451054.83669298,\n","       1497300.12660551, 1408623.53759157, 1298685.53562932,\n","       1594988.12838329, 1019774.81464196,  669981.22663847,\n","       1204346.04779766,  834713.92232267,  701905.68993976,\n","       1551568.38151924,  712740.21447479,  873758.2195346 ,\n","       1527820.56423939, 1790391.26887318, 1406651.01450389,\n","       1207085.12609942, 1358891.7982875 , 1496985.36029109,\n","        967241.24954386, 1125086.79835273,  852033.1686896 ,\n","       1110260.1719021 , 1472630.48224533,  987851.35978883,\n","       1073465.07184636, 1751449.14640551, 1226470.10745433,\n","       1320410.01854133, 1502821.23585483, 1587587.96066583,\n","       1168922.60703162,  351122.21558161, 1411698.30447184,\n","       1047370.06197165, 1590880.96037701,  790286.84254017,\n","       1139027.96579786, 1141891.79910828,  795336.30968059,\n","        870579.38852634, 1119020.83239672, 1284571.99510895,\n","       1288959.71640169, 1441366.37628915, 1139779.04518401,\n","       1023538.35612423, 1432136.50673972,  969054.03014243,\n","       1368738.93850444,  840043.02052822, 1085547.14007708,\n","       1083561.5432348 , 1631514.30538973, 1122169.55675151,\n","       1133358.03287151, 1394617.42623278, 1026229.89956675,\n","       1452139.99843808, 1392827.47213068, 1513015.71448582,\n","       1568797.44802276, 1256282.35263029, 1487797.82853038,\n","        984067.41702127, 1412948.7414934 , 1672049.66537481,\n","       1306081.65117976, 1354604.25731366, 1235105.64583782,\n","       1428125.69576171,  869480.69270887, 1333400.5118282 ,\n","        970786.62441329,  586898.56588959, 1602118.36701157,\n","       1261721.99693725, 1562709.69625522, 1231923.49007283,\n","       1713933.5540466 , 1238803.84931816, 1329489.39773045,\n","       1115689.52628401, 1461505.67557975, 1536294.59674014,\n","       1360797.90915992, 1285380.4005836 ,  867277.76943343,\n","       1526074.98595856,  571814.65110026,  440132.95694877,\n","       1458253.51368307, 1240676.18045093, 1799335.12963111,\n","       1591987.37576132,  869278.65839971, 1327741.93134287,\n","       1543352.95964213, 1395062.35917248,  372309.6829664 ,\n","        490477.39847225, 1323749.48648769, 1026213.84220735,\n","       1225673.29732845, 1245827.88383915, 1041805.86843134,\n","       1055894.86965994, 1709815.07230749, 1349101.78674099,\n","       1048142.8965977 , 1648183.07857863, 1228784.3793383 ,\n","       1174880.67129106, 1047497.29216171, 1247459.92398295,\n","       1119726.29833154, 1277815.48632632, 1387839.53940811,\n","        838344.54139733, 2020593.62744502, 1295112.77098438,\n","        682759.02841516,  779575.02818545, 1415476.51565894,\n","       1411164.79474747,  990987.54866139, 1140352.82324686,\n","       1792719.35378279, 1860793.55100779, 1501727.48091407,\n","       1031787.47479438, 1057918.24025095, 1615890.03750715,\n","       1721494.2622193 , 1376693.91405455, 1096198.24472006,\n","       1117696.51218907,  811085.02051468, 1312548.43271583,\n","       1083759.12409625, 1392547.63927859, 1725298.27609607,\n","       1032413.29976845,  690592.74851757, 1432633.92215566,\n","       1271099.09744409, 1067855.13640649, 1350305.77040359,\n","       1979610.9719385 ,  863967.72413149, 1426871.62162726,\n","        513629.28471553, 1459829.47526707, 1294311.73552933,\n","       1423835.64565637, 1095384.92683866,  765423.4692086 ,\n","       1464434.03630949, 1448577.05362946, 1412586.8724652 ,\n","       1496069.04798386, 1306179.28431089, 1355740.05944598,\n","       1529224.71239157, 1074015.07635105, 1271158.58993156,\n","       1026856.56723776, 1038286.57733706, 1538820.40819685,\n","       1329868.98909557, 1164887.54575517,  934165.27097737,\n","       1068211.83551183, 1218498.35452228,  163911.91653752,\n","       1180473.07971771, 1234203.42234302, 1020472.98635001,\n","       1867877.78033626,  957488.56045131, 1317234.00631396,\n","       1058939.25076966, 1408561.55613458, 1315085.88130981,\n","       1526759.99321989, 1215648.86010557,  857697.47874485,\n","       1616525.44746272,  909660.92852754, 1054407.12443521,\n","       1288241.80013193, 1578379.83854783,  594273.4420966 ,\n","       1310641.12158171, 1306866.02638985, 1691313.68257311,\n","       1366262.51270468, 1153289.80739056,  653611.65408367,\n","       1335292.15669011, 1229488.34110884, 1371950.69569646,\n","       1228943.11223321, 1248749.76788167, 1163135.09929082,\n","       1615412.80505048, 1882359.16588594, 1514125.02235259,\n","       1570135.19268551, 1391193.72449896, 1548357.71633153,\n","       1237890.61682626,  397248.86416658,  899158.76744751,\n","       1244118.62672095, 1483460.72017287,  849158.98580302,\n","       1103130.89016067, 1566383.25009617, 1801242.4055076 ,\n","       1134945.5430692 ,  857922.9233864 , 1393475.04743939,\n","        887522.58019815, 1207487.55431388,  940963.78264783,\n","       1110155.09860628, 1287938.14165115,  844495.39104463,\n","        950845.41046371, 1378240.50143213, 1413391.32805183,\n","       1500841.09013672, 1318268.33163947, 1022589.96486329,\n","        991416.9439065 , 1161797.51868004, 1346594.86861215,\n","        970308.6709066 , 1633104.88465597, 1162694.2032649 ,\n","       1041366.96340708, 2058068.40938166, 1501617.83990279,\n","        847392.48674242,  433725.18806943, 1125468.92263164,\n","       1293819.02170557, 1359204.8228162 ,  831864.11936815,\n","       1813454.41975123, 1371613.88599487, 1665804.22301661,\n","        830739.39203661, 1154568.07038734, 1144938.65526833,\n","        918501.36805484, 1144306.11773523,  879411.14402032,\n","       1770496.5978022 , 1308182.87410198, 1736066.90706105,\n","        860089.97069105, 1187083.07410691, 1739053.73233947,\n","       1122290.70499257, 1078994.30014   , 1749362.71154406,\n","       1708370.73587373,  758125.39130007,  774639.07729017,\n","       1290542.90836165, 1568435.30934139,  681391.87913201,\n","       1286290.73976602, 1240149.08376379, 1767291.81186966,\n","        902841.83360642, 1808417.37563709, 1403092.40968456,\n","       2092334.09816545,  786364.25269113, 1417329.76029209,\n","       1077041.18408651,  580191.5257241 , 1737367.89905399,\n","        790016.32835641, 1156209.96805436, 1196297.20616044,\n","        940257.13542107, 1189721.40313359, 1217181.90982511,\n","       1360476.04246413, 1288788.65120385, 1268828.23423813,\n","       1016722.86821368,  863320.77150531, 1085547.03737254,\n","       1188030.26188831, 1809273.5926004 , 1790662.30512061,\n","       1862763.93381337, 1742850.55377   ,  917298.67394462,\n","         99329.7101763 , 1134904.92563592, 1310604.17824182,\n","       1440682.11584906, 1808365.75311442, 1404191.59479902,\n","       1321519.49541455,  691032.79710026, 1217136.80471344,\n","        598663.12601562, 1586048.26042892, 1216026.31242581,\n","       1249959.63343553, 1545206.00884625,  592608.65359922,\n","        768593.6126592 , 1400098.53855794, 1325758.47867089,\n","        839901.18318222, 1037108.19846218, 1548658.50627946,\n","       1293993.21214788, 1164417.99337832, 1347054.85254327,\n","       1342521.45795799, 1070434.37227145, 1569938.9845625 ,\n","       1589210.93544098, 1795557.78913832,  792876.90913752,\n","       1822747.70453387, 2058840.67208259,  771364.71856569,\n","       1022937.81027809, 1384037.09292549, 1067062.45903129,\n","       1733761.08454277])"]},"metadata":{},"execution_count":18}],"source":["lr=LinearRegression()\n","lr.fit(x_train,y_train)\n","y_pred_test=lr.predict(x_test)\n","y_pred_test\n","\n","## So these are the'prices in dollars' predicted by our \"Linear Regression Model\" for x_test dataset"],"id":"1X0YtrOgUcoZ"},{"cell_type":"code","execution_count":19,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":670,"status":"ok","timestamp":1699368327071,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"},"user_tz":-330},"id":"9O2rV7d8UjJh","outputId":"9956203a-0c97-4d08-a6b1-13e9a7fdfaf2"},"outputs":[{"output_type":"stream","name":"stdout","text":["Test Mean Squared Error: 10074785209.17\n","Test R-Squared: 0.91\n","Test Explained Variance Score: 0.91\n","Test Mean Absolute Error: 80530.87\n"]}],"source":["from sklearn.metrics import r2_score, mean_squared_error, explained_variance_score, mean_absolute_error\n","\n","mse = mean_squared_error(y_pred_test, y_test)\n","r2 = r2_score(y_pred_test, y_test)\n","expl_var = explained_variance_score(y_pred_test, y_test)\n","mae = mean_absolute_error(y_pred_test, y_test)\n","\n","# Print evaluation metrics for testing set\n","print('Test Mean Squared Error: {:.2f}'.format(mse))\n","print('Test R-Squared: {:.2f}'.format(r2))\n","print('Test Explained Variance Score: {:.2f}'.format(expl_var))\n","print('Test Mean Absolute Error: {:.2f}'.format(mae))"],"id":"9O2rV7d8UjJh"},{"cell_type":"code","execution_count":20,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":405,"status":"ok","timestamp":1699368336818,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"},"user_tz":-330},"id":"Y-wYqVhRStvD","outputId":"226053ec-861a-4923-c992-50a2e8b47565"},"outputs":[{"output_type":"stream","name":"stdout","text":["245      77010.585648\n","4493   -141680.909802\n","4583     -6698.680014\n","2242     68734.412741\n","3407    104045.817517\n","            ...      \n","877       9219.792466\n","1314    127092.244778\n","2344    -67893.538075\n","2717     -1724.212969\n","4662    161912.853543\n","Name: Price, Length: 1000, dtype: float64\n","264816.1147315301\n"]}],"source":["print(y_pred_test-y_test)\n","print(max(y_pred_test-y_test))"],"id":"Y-wYqVhRStvD"},{"cell_type":"code","execution_count":21,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":656},"executionInfo":{"elapsed":1061,"status":"ok","timestamp":1699368349707,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"},"user_tz":-330},"id":"54HzsqVFQpG8","outputId":"9337127b-a72f-49f0-ec9d-798429a3b28c"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-21-7edcc90935e1>:1: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(y_pred_test-y_test);      ## ytest-ypred = error/residuals\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAioAAAHACAYAAACMB0PKAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABQAElEQVR4nO3deXhU1eE+8PfOnn1fSQIJIUASlrBFdhAU0KqoVatWwVqLCrUWtUDbL9a2Fm2rP5daWjeodcEVsQgIsoPskLAEwpKEhOz7nsks5/dHIBIJkIRJzp2Z9/M8eSQzN5n34hBezj3nXEUIIUBERESkQhrZAYiIiIguh0WFiIiIVItFhYiIiFSLRYWIiIhUi0WFiIiIVItFhYiIiFSLRYWIiIhUi0WFiIiIVItFhYiIiFSLRYWIiIhUy2WKyrZt23DLLbcgMjISiqLgyy+/7PbXzM/Px09/+lMEBQXBw8MDgwYNwv79+7v9dYmIiNyFyxSV+vp6DBkyBG+88UaPvF5lZSXGjh0LvV6PtWvXIiMjAy+99BICAgJ65PWJiIjcgeKKNyVUFAUrV67EzJkzWx8zm8343e9+h48++ghVVVVITk7Giy++iEmTJnXpNRYuXIidO3di+/btjglNREREl3CZEZWrmTdvHnbt2oUVK1bg8OHDuOuuuzB9+nScOnWqS9/vq6++wogRI3DXXXchNDQUKSkpeOuttxycmoiIyL25xYhKbm4u4uLikJubi8jIyNbjpk6dilGjRuEvf/lLp1/DZDIBAObPn4+77roL+/btw69+9Sv861//wqxZsxxyHkRERO5OJztATzhy5AhsNhsSEhLaPG42mxEUFAQAOHHiBAYOHHjF77NgwQK88MILAAC73Y4RI0a0lpyUlBQcPXqURYWIiMiB3KKo1NXVQavV4sCBA9BqtW2e8/b2BgDExcXh+PHjV/w+F0oNAERERCAxMbHN8wMHDsTnn3/uoNRERETkFkUlJSUFNpsNJSUlGD9+fLvHGAwGDBgwoMPfc+zYscjMzGzz2MmTJ9G7d+9rykpERETfc5miUldXh9OnT7d+np2djbS0NAQGBiIhIQH3338/HnzwQbz00ktISUlBaWkpNm7ciMGDB+Pmm2/u9Ov9+te/xpgxY/CXv/wFd999N/bu3Ys333wTb775piNPi4iIyK25zGTaLVu2YPLkyZc8PmvWLCxfvhwWiwV//vOf8d577yE/Px/BwcG47rrr8Nxzz2HQoEFdes3Vq1dj0aJFOHXqFGJjYzF//nw88sgj13oqREREdJ7LFBUiIiJyPW6zjwoRERE5HxYVIiIiUi2nnkxrt9tRUFAAHx8fKIoiOw4RERF1gBACtbW1iIyMhEZz5TETpy4qBQUFiI6Olh2DiIiIuiAvLw9RUVFXPMapi4qPjw+AlhP19fWVnIaIiIg6oqamBtHR0a1/j1+JUxeVC5d7fH19WVSIiIicTEembXAyLREREakWiwoRERGpFosKERERqRaLChEREakWiwoRERGpFosKERERqRaLChEREakWiwoRERGpFosKERERqRaLChEREakWiwoRERGpFosKERERqRaLChEREakWiwoRERGpFosKERERqZZOdgAiou7w4Z7cLn/tfakxDkxCRNeCIypERESkWiwqREREpFosKkRERKRaLCpERESkWiwqREREpFosKkRERKRaLCpERESkWiwqREREpFosKkRERKRaLCpERESkWiwqREREpFosKkRERKRaLCpERESkWiwqREREpFosKkRERKRaLCpERESkWiwqREREpFosKkRERKRaLCpERESkWiwqREREpFosKkRERKRaLCpERESkWiwqREREpFosKkRERKRaLCpERESkWiwqREREpFosKkRERKRaLCpERESkWiwqREREpFosKkRERKRaLCpERESkWiwqREREpFosKkRERKRaLCpERESkWiwqREREpFosKkRERKRaLCpERESkWiwqREREpFosKkRERKRaLCpERESkWiwqREREpFosKkRERKRaLCpERESkWqopKi+88AIURcGTTz4pOwoRERGphCqKyr59+/Dvf/8bgwcPlh2FiIiIVER6Uamrq8P999+Pt956CwEBAbLjEBERkYpILypz587FzTffjKlTp171WLPZjJqamjYfRERE5Lp0Ml98xYoVOHjwIPbt29eh45csWYLnnnuum1MRERGRWkgbUcnLy8OvfvUrfPDBBzCZTB36mkWLFqG6urr1Iy8vr5tTEhERkUzSRlQOHDiAkpISDBs2rPUxm82Gbdu24R//+AfMZjO0Wm2brzEajTAajT0dlYiIiCSRVlSmTJmCI0eOtHnsoYcewoABA7BgwYJLSgoRERG5H2lFxcfHB8nJyW0e8/Ly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jTfQp08fmEwmpKamYu/evW2eb2pqwty5cxEUFARvb2/ceeedl2z02JEs3elq59BTtm3bhltuuQWRkZFQFAVffvllm+d78n3liPf45SxZsgQjR46Ej48PQkNDMXPmTGRmZrY5xlHvm556D7dn6dKlGDx4cOs+J6NHj8batWtd6hy7naAOe+KJJ8SMGTMEAHHo0KHWx6urq0VYWJi4//77xdGjR8VHH30kPDw8xL///e/WY3bu3Cm0Wq3461//KjIyMsTvf/97odfrxZEjR1qPeeGFF4Sfn5/48ssvRXp6urj11ltFbGysaGxsbD1m+vTpYsiQIWL37t1i+/btIj4+Xtx7772dynI5L7/8sti1a5fIyckRO3fuFKNHjxajR492qfNcu3atmD17tvjmm2/EmTNnxKpVq0RoaKh46qmnXOo8hRBi8eLF4uWXXxbz588Xfn5+lzxvtVpFcnKymDp1qjh06JBYs2aNCA4OFosWLWo9JisrS3h6eor58+eLjIwM8frrrwutVivWrVvXesyKFSuEwWAQ7777rjh27Jh45JFHhL+/vyguLm495tFHHxXR0dFi48aNYv/+/eK6664TY8aM6VSW7tSRc+gpa9asEb/73e/EF198IQCIlStXtnm+p95XjnqPX860adPEsmXLxNGjR0VaWpq46aabRExMjKirq2s9xhHvm556D1/OV199Jb7++mtx8uRJkZmZKX77298KvV4vjh496jLn2N1YVDpozZo1YsCAAeLYsWOXFJV//vOfIiAgQJjN5tbHFixYIPr379/6+d133y1uvvnmNt8zNTVVzJkzRwghhN1uF+Hh4eJvf/tb6/NVVVXCaDSKjz76SAghREZGhgAg9u3b13rM2rVrhaIoIj8/v8NZOmrVqlVCURTR3Nzs0uf517/+VcTGxrZ+7mrnuWzZsnaLypo1a4RGoxFFRUWtjy1dulT4+vq2vt5vfvMbkZSU1Obr7rnnHjFt2rTWz0eNGiXmzp3b+rnNZhORkZFiyZIlreet1+vFp59+2nrM8ePHBQCxa9euDmfpTlc7B1l+WFR68n3liPd4Z5SUlAgAYuvWra3fyxHvm556D3dGQECAePvtt136HB2Jl346oLi4GI888gj++9//wtPT85Lnd+3ahQkTJsBgMLQ+Nm3aNGRmZqKysrL1mKlTp7b5umnTpmHXrl0AgOzsbBQVFbU5xs/PD6mpqa3H7Nq1C/7+/hgxYkTrMVOnToVGo8GePXs6nKUjKioq8MEHH2DMmDHQ6/Uue55Ay124AwO/v4W5q57nD+3atQuDBg1qs7nitGnTUFNTg2PHjnXoPJubm3HgwIE2x2g0GkydOrX1mAMHDsBisbQ5ZsCAAYiJiWnze3G1LN2lI+egFj35vnLEe7wzqqtbbu974c+io943PfUe7gibzYYVK1agvr4eo0ePdslz7A4sKlchhMDs2bPx6KOPtvmDf7GioqJLdtK98HlRUdEVj7n4+Yu/7nLHhIaGtnlep9MhMDDwqq9z8WtcyYIFC+Dl5YWgoCDk5uZi1apVLnmeF5w+fRqvv/465syZ49Ln2Z5rOc+amho0NjairKwMNpvtqudpMBgumSfzw2O66zyvpiPnoBY9+b5yxHu8o+x2O5588kmMHTsWycnJrd/fEe+bnnoPX8mRI0fg7e0No9GIRx99FCtXrkRiYqJLnWN3ctuisnDhQiiKcsWPEydO4PXXX0dtbS0WLVokO3KXLFy4EElJSQCAxMTEy57nBc888wwOHTqE9evXQ6vV4sEHH4Rwgj0BO3ueAJCfn4/p06fjrrvuwiOPOMeN17tynkRqN3fuXBw9ehQrVqyQHaVb9O/fH2lpadizZw8ee+wxzJo1CxkZGbJjOQ1VbKEvw1NPPYXZs2df8Zi4uDhs2rQJu3btumR74hEjRuD+++/Hf/7zH4SHh18yM/rC5+Hh4a3/be+Yi5+/8FhERESbY4YOHdp6TElJSZvvYbVaUVFRcdnXeeqppzBw4EDMnj0bu3fvbvdulXFxca2/Dg4ORnBwMBISEjBw4EBER0dj9+7dGD16tEudZ0FBASZPnowxY8bgzTffbHOcK53nlYSHh18y67+j5+nr6wsPDw9otVpotdqr/l40Nzejqqqqzb/WfnjM1bJ0l+Dg4Kueg1p01/vqwve4+DUc8R7viHnz5mH16tXYtm0boqKi2pyrI943PfUevhKDwYD4+HgAwPDhw7Fv3z68+uqruOeee1zmHLuT246ohISEYMCAAVf8MBgMeO2115Ceno60tDSkpaW1Ls/7+OOP8fzzzwMARo8ejW3btsFisbR+/w0bNqB///4ICAhoPWbjxo1tMmzYsAGjR48GAMTGxiI8PLzNMTU1NdizZ0/rMaNHj0ZVVRUOHDjQesymTZtgt9uRmprabpaQkBBkZmaif//+SE1Nvex5tsdutwNoWZbtSueZn5+PSZMmYfjw4Vi2bBk0mrZ/DFzlPK9m9OjROHLkSJu/1DZs2ABfX18kJiZ26DwNBgOGDx/e5hi73Y6NGze2HjN8+HDo9fo2x2RmZiI3N7fN78XVsnSXjpyDWnTX+wronvf4lQghMG/ePKxcuRKbNm1CbGxsm+cd9b7pqfdwZ9jtdpjNZpc+R4eSOpXXCWVnZ1+y6qeqqkqEhYWJBx54QBw9elSsWLFCeHp6XrLUT6fTib///e/i+PHj4tlnn213qZ+/v79YtWqVOHz4sLjtttvaXXaYkpIi9uzZI3bs2CH69evXZtlhR7K0Z/fu3eL1118Xhw4dEjk5OWLjxo1izJgxom/fvqKpqcllzvPcuXMiPj5eTJkyRZw7d04UFha2frjS/08hhDh79qw4dOiQeO6554S3t7c4dOiQOHTokKitrRVCfL/s8cYbbxRpaWli3bp1IiQkpN1lj88884w4fvy4eOONN9pd9mg0GsXy5ctFRkaG+MUvfiH8/f3brFJ49NFHRUxMjNi0aZPYv3//JUvfO5KlO3XkHHpKbW1t6/8rAOLll18Whw4dEmfPnhVC9Nz7ylHv8ct57LHHhJ+fn9iyZUubP4cNDQ2txzjifdNT7+HLWbhwodi6davIzs4Whw8fFgsXLhSKooj169e7zDl2NxaVTmqvqAghRHp6uhg3bpwwGo2iV69e4oUXXrjkaz/55BORkJAgDAaDSEpKEl9//XWb5+12u/i///s/ERYWJoxGo5gyZYrIzMxsc0x5ebm49957hbe3t/D19RUPPfRQ6188ncnyQ4cPHxaTJ08WgYGBwmg0ij59+ohHH31UnDt3zqXOc9myZQJAux+udJ5CCDFr1qx2z3Pz5s2tx+Tk5IgZM2YIDw8PERwcLJ566ilhsVjafJ/NmzeLoUOHCoPBIOLi4sSyZcsuea3XX39dxMTECIPBIEaNGiV2797d5vnGxkbx+OOPi4CAAOHp6Sluv/32NuWwo1m609XOoads3ry53f9vs2bNEkL07PvKEe/xy7ncn8OL31+Oet/01Hu4PT/72c9E7969hcFgECEhIWLKlCmtJcVVzrG78e7JREREpFpuO0eFiIiI1I9FhYiIiFSLRYWIiIhUi0WFiIiIVItFhYiIiFSLRYWIiIhUi0WFiIiIVItFhYiIiFSLRYWIVKdPnz545ZVXZMcgIhVgUSGibjV79mwoigJFUVrvIvvHP/4RVqv1sl+zb98+/OIXv+jBlESkVjrZAYjI9U2fPh3Lli2D2WzGmjVrMHfuXOj1eixatKjNcc3NzTAYDAgJCZGUlIjUhiMqRNTtjEYjwsPD0bt3bzz22GOYOnUqvvrqK8yePRszZ87E888/j8jISPTv3x/ApZd+qqqqMGfOHISFhcFkMiE5ORmrV69ufX7Hjh0YP348PDw8EB0djSeeeAL19fU9fZpE1A04okJEPc7DwwPl5eUAgI0bN8LX1xcbNmxo91i73Y4ZM2agtrYW77//Pvr27YuMjAxotVoAwJkzZzB9+nT8+c9/xrvvvovS0lLMmzcP8+bNw7Jly3rsnIioe7CoEFGPEUJg48aN+Oabb/DLX/4SpaWl8PLywttvvw2DwdDu13z77bfYu3cvjh8/joSEBABAXFxc6/NLlizB/fffjyeffBIA0K9fP7z22muYOHEili5dCpPJ1O3nRUTdh5d+iKjbrV69Gt7e3jCZTJgxYwbuuece/OEPfwAADBo06LIlBQDS0tIQFRXVWlJ+KD09HcuXL4e3t3frx7Rp02C325Gdnd0dp0NEPYgjKkTU7SZPnoylS5fCYDAgMjISOt33P3q8vLyu+LUeHh5XfL6urg5z5szBE088cclzMTExXQtMRKrBokJE3c7Lywvx8fFd+trBgwfj3LlzOHnyZLujKsOGDUNGRkaXvz8RqRsv/RCRqk2cOBETJkzAnXfeiQ0bNiA7Oxtr167FunXrAAALFizAd999h3nz5iEtLQ2nTp3CqlWrMG/ePMnJicgRWFSISPU+//xzjBw5Evfeey8SExPxm9/8BjabDUDLiMvWrVtx8uRJjB8/HikpKVi8eDEiIyMlpyYiR1CEEEJ2CCIiIqL2cESFiIiIVItFhYiIiFSLRYWIiIhUi0WFiIiIVItFhYiIiFSLRYWIiIhUi0WFiIiIVItFhYiIiFSLRYWIiIhUi0WFiIiIVItFhYiIiFSLRYWIiIhU6/8Dw3LdC9oo9OQAAAAASUVORK5CYII=\n"},"metadata":{}}],"source":["sns.distplot(y_pred_test-y_test);      ## ytest-ypred = error/residuals"],"id":"54HzsqVFQpG8"},{"cell_type":"code","execution_count":22,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":407,"status":"ok","timestamp":1699368352844,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"},"user_tz":-330},"id":"RSi97Y-JRgfH","outputId":"72fc28d8-3daa-4c20-fc2f-e3bb627946fb"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Avg. Area Income', 'Avg. Area House Age', 'Avg. Area Number of Rooms',\n","       'Avg. Area Number of Bedrooms', 'Area Population', 'Price'],\n","      dtype='object')"]},"metadata":{},"execution_count":22}],"source":["df.columns"],"id":"RSi97Y-JRgfH"},{"cell_type":"markdown","source":["#### Calculating the coefficient values and the intercept"],"metadata":{"id":"1AUG_6A1P0Ny"},"id":"1AUG_6A1P0Ny"},{"cell_type":"code","execution_count":26,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":415,"status":"ok","timestamp":1699369660077,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"},"user_tz":-330},"id":"49be0bd1","outputId":"393860e2-4427-4e42-825f-6073e94c0122"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                               Coefficients     Intercept\n","Avg. Area Income              229992.941478  1.232393e+06\n","Avg. Area House Age           163958.121450  1.232393e+06\n","Avg. Area Number of Rooms     120165.821743  1.232393e+06\n","Avg. Area Number of Bedrooms    1556.782204  1.232393e+06\n","Area Population               151182.642370  1.232393e+06"],"text/html":["\n","  <div id=\"df-0fc23a36-eda7-4a02-84b4-d9f77594520f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Coefficients</th>\n","      <th>Intercept</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Avg. Area Income</th>\n","      <td>229992.941478</td>\n","      <td>1.232393e+06</td>\n","    </tr>\n","    <tr>\n","      <th>Avg. Area House Age</th>\n","      <td>163958.121450</td>\n","      <td>1.232393e+06</td>\n","    </tr>\n","    <tr>\n","      <th>Avg. Area Number of Rooms</th>\n","      <td>120165.821743</td>\n","      <td>1.232393e+06</td>\n","    </tr>\n","    <tr>\n","      <th>Avg. Area Number of Bedrooms</th>\n","      <td>1556.782204</td>\n","      <td>1.232393e+06</td>\n","    </tr>\n","    <tr>\n","      <th>Area Population</th>\n","      <td>151182.642370</td>\n","      <td>1.232393e+06</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0fc23a36-eda7-4a02-84b4-d9f77594520f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0fc23a36-eda7-4a02-84b4-d9f77594520f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0fc23a36-eda7-4a02-84b4-d9f77594520f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e1f02b87-256a-436c-b70a-1c445faaf9d5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e1f02b87-256a-436c-b70a-1c445faaf9d5')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e1f02b87-256a-436c-b70a-1c445faaf9d5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":26}],"source":["col = ['Avg. Area Income', 'Avg. Area House Age', 'Avg. Area Number of Rooms','Avg. Area Number of Bedrooms', 'Area Population']\n","coeff_df = pd.DataFrame(lr.coef_, col, columns=['Coefficients'])\n","coeff_df['Intercept'] = lr.intercept_\n","coeff_df\n","\n"],"id":"49be0bd1"},{"cell_type":"markdown","metadata":{"id":"DeuzFBI7vNe4"},"source":["## Ridge Regression"],"id":"DeuzFBI7vNe4"},{"cell_type":"code","execution_count":27,"metadata":{"id":"p8N7Twe-VU9M","executionInfo":{"status":"ok","timestamp":1699369686508,"user_tz":-330,"elapsed":1164,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"}}},"outputs":[],"source":["RR=Ridge(alpha=.0001)"],"id":"p8N7Twe-VU9M"},{"cell_type":"code","execution_count":28,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1699369686508,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"},"user_tz":-330},"id":"etH47GOGVjx5","outputId":"ea3b1d34-9a8d-4890-cfa7-16c6ff18c5f3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1195058.57840228, 1185265.8145017 , 1046786.19424622,\n","        827779.10985303, 1485163.51281666,  542138.69203293,\n","       2473734.87709376, 1447749.44264311, 1322766.64603548,\n","       1137661.55809144, 1373281.52738838, 1719966.98056206,\n","       1372477.12435144,  521453.41903218, 1412349.84625657,\n","       1074289.44241761,  959129.70563437, 1125293.75052931,\n","       1281045.09456465, 1009354.63330879,  788527.62385737,\n","       1070710.32930938, 1286070.31265948, 1054795.95900623,\n","       1248708.19870776, 1446840.09625074,  376036.06852399,\n","       1275418.64801745, 1204407.28995618, 1500191.61345109,\n","       1634136.00004112, 1579737.85627423, 1492533.29415622,\n","        380169.05618844, 1813542.14103532, 1216232.5962796 ,\n","       1556216.55553532, 1070938.6882235 , 1231003.47785981,\n","       1076791.63682475, 1005529.41291142, 1788883.41958133,\n","       1037652.19589419, 1435240.7070191 ,  833401.70373483,\n","        888585.1864697 , 1135122.87646703,  906362.58135561,\n","       1315708.05964759, 1504142.0282624 , 1039185.53924872,\n","       1100211.37346112, 1384869.65230457, 1200247.79592342,\n","       1434283.2129742 , 1033550.96720199, 1308054.92609191,\n","       1040966.53648856, 1248892.819413  , 1688966.67542595,\n","       1294565.23467709, 1154012.07879473, 1564396.40678527,\n","       1066515.07213303, 1063853.95301796, 1171627.96147042,\n","       1330809.39420807, 1396718.44186615,  914942.30105445,\n","        333028.99880864, 1237403.44704992, 1510837.75387684,\n","        644750.16627007,  890879.22431366,  561199.31565035,\n","       1413413.81811441,  472760.63625482,  856001.17889011,\n","       2003467.42208474, 1610624.06834737, 1298855.4063816 ,\n","       1563258.73830422, 1218826.14005769, 1364902.47070042,\n","       1493072.14803519, 1262157.34751318, 1080617.08630923,\n","        760089.5999505 , 1592897.05942901, 1126811.03931305,\n","        861770.6180437 , 1308696.31905233,  815552.14618575,\n","       1503897.12921249, 1147240.9929415 , 1223929.46668576,\n","       1724150.51370767, 1330634.35749154, 1432688.85538187,\n","       1427608.45045322,  779452.87631111,  995360.44667656,\n","       1261800.00162961, 1486224.22453358, 1218782.0815822 ,\n","        755852.74677673, 1352259.10129703, 1185127.84262743,\n","       1324217.88397612, 1010631.87938068, 1000582.63907124,\n","       1778881.83596868, 1427335.68236747, 1271756.09322972,\n","       1412394.41394411,  897892.67095033,  929347.72026669,\n","       1331906.86304141,  731693.86967562, 1107208.23288905,\n","       1017453.35878405,  762051.70083609, 1217293.80106367,\n","        747625.62831144, 1201468.75715151, 1757166.73196739,\n","       1432014.58211047,  984187.06630791, 1375938.18687634,\n","        609299.49830895, 1036197.19949395, 1736354.89575254,\n","       1361471.77963171, 1382330.89887953, 1568087.77997781,\n","       1270445.82542365,  885080.6855988 , 1040058.3119553 ,\n","       1102976.25654476, 1118835.91135406, 1489732.8899267 ,\n","       1128255.00570439, 1646505.19551053, 1440165.68868913,\n","       1084742.00238663,  955969.24168957, 1192497.2520203 ,\n","       1414903.30961117, 1845356.3660387 ,  698862.40660452,\n","       1233742.00437664, 1511835.45803782, 1384891.61540025,\n","       1059491.08082005, 1539483.13093099, 1767648.50658023,\n","       1151210.61031878, 1218701.18438354, 1374614.0349931 ,\n","        966751.09711447, 1347387.24284133, 1062852.33417554,\n","        621044.9986045 , 1290526.94037288, 1123553.34448674,\n","        993429.62882829, 1072347.87421488, 1181495.30918198,\n","       1102252.08501076,  629646.7999897 , 1495388.08815806,\n","       1217162.64765023, 1114602.21720235,  976992.69950746,\n","       1700640.93339898, 1391595.78689753, 1285197.26419422,\n","        729329.8526683 , 1157455.81077491, 1249597.98440639,\n","        491984.94947218,  745846.7577101 , 1204018.49758494,\n","       1292494.85435213, 1252895.20420169,  977031.6095455 ,\n","        908042.96481111, 1394565.15134068,  487958.45505334,\n","       1571770.62573757, 1478145.40066562, 1457616.34670644,\n","       1318327.99036622, 1325392.07954462, 1481471.737293  ,\n","       1460608.13364988, 1414373.6337624 , 1359773.67612598,\n","        528380.70093705, 1060647.650011  , 1289435.47961756,\n","       1823929.43059849, 1421593.26836583, 1794401.0147121 ,\n","        669908.44523258, 1270861.37145489,  988002.50138378,\n","       1541541.57581712,  467777.74850934, 1771003.63295391,\n","       1424864.17274433, 1683483.07354516, 1184964.85172695,\n","       1111399.9214787 , 1213277.96628934, 1106829.68914228,\n","       1153682.51017378, 1076046.46986553, 1751807.26645546,\n","        665213.59968935, 1450168.33547998,  820891.90417602,\n","       1349511.89048976, 1550570.64037777, 1164113.0177096 ,\n","       1274478.96360711, 2047647.64934933, 1245398.74599581,\n","       1084428.25427153,  969761.79783897, 1373249.7037347 ,\n","       1540610.41410973, 1231016.04882729,  801603.77861716,\n","        680685.64043434,  953325.24199433, 1842412.85594408,\n","       1722437.60070997, 1118027.19717427, 1691916.48930602,\n","        991567.20337416, 1229973.46308197, 1267269.76160088,\n","       1231312.40114058,  895071.99389901, 1172186.61538119,\n","        847063.9466078 ,  721226.53279647, 1532621.91231959,\n","       1559621.81283653,  952447.49409415,  855567.91816084,\n","       1171717.74712333, 1024553.30531979, 1636578.24442732,\n","       1913593.33414262, 1285506.78809554, 1365864.18526419,\n","        856254.91616803, 1509127.37472234, 1449341.92152654,\n","       1048347.397807  , 1482996.93048669, 1461969.14882664,\n","       1233203.3073241 , 1336076.07903069, 1327331.03393556,\n","        878088.43488344, 1661396.18644827,  871897.22789813,\n","       1124273.28376729, 1580336.54442527, 1413410.6144453 ,\n","       1353314.12230719,  769163.7547277 ,  752579.62794814,\n","       1351468.48707244, 1491711.73828571, 1139155.50374319,\n","        896717.77295696,  926902.47037277, 1778576.6907975 ,\n","       1585044.74155281, 1035045.43130006, 1584427.98029928,\n","        874420.56543059, 1624961.35991782, 1448306.88066834,\n","       1436306.47992153,  718171.42449322, 1277691.69195097,\n","       1881894.43528766, 1116483.51988687, 1096351.6213204 ,\n","       1213579.7380471 , 1530585.58547284, 1565904.91292526,\n","        753780.88931875,  505041.25408188, 1045713.73049261,\n","       1258357.19969038,  784961.78150382, 1092107.65908376,\n","        893870.40908817, 1382887.18364542,  829553.98823144,\n","       1185215.26044216,  802134.4293135 ,  488465.6173403 ,\n","       1217667.90906172,  722036.6558975 ,  566381.89111859,\n","       1409555.187129  , 1233914.00958106, 1093973.52122771,\n","       1606700.67175492, 1791955.88363657, 1572028.13483094,\n","       1730135.41835469,  784899.06371155, 1061285.93296873,\n","       1638238.61204224, 1103239.7110916 ,  792443.06279738,\n","       1119166.29161505, 1622171.06990719, 1462488.91498135,\n","       1706096.3110863 , 1697996.40072814, 1506299.32006699,\n","       1290891.22350051,  950818.98004494, 1039104.1178173 ,\n","       1283267.10426665, 1311278.7123477 , 1182723.96237637,\n","       1325244.23138225, 1787177.62920346,  962368.27548023,\n","        691812.12244577, 1442462.59080952, 1675570.53416796,\n","       1761084.37037132,  765749.45356976, 1792479.48104182,\n","       1410063.161291  ,  975124.12872154,  769210.2634704 ,\n","       1174064.28605234, 1523413.22206691, 1937512.80784631,\n","       1104627.77161778, 1449504.26784977, 1253235.75230589,\n","       1403817.30415923, 1407125.94526614, 1146656.48130092,\n","        704742.4640438 , 1339721.44617548, 1091783.12658621,\n","       1147727.81930508, 1154659.23315884, 1804807.10946104,\n","       1428688.76440456, 1522325.19352963,  373900.70060646,\n","       1409569.75998441, 1331678.11304081, 1413101.41795686,\n","       1114768.0280351 , 1187217.90399341, 1506029.6995316 ,\n","       1901667.81234222, 1821988.49890373,  847757.4406354 ,\n","       1139369.61067251,  802649.039255  ,  786729.91133557,\n","       1665062.61064969,  966646.79519969,  934159.50604557,\n","       1557883.53458492, 1669020.46711333, 1251764.46467725,\n","        789766.98849089,  734770.83866681, 1363841.47435912,\n","        407841.90835112, 1318130.9786239 ,  846778.28997541,\n","       1069573.12257179, 1393202.39381071,  790032.32149665,\n","        885951.49391062, 1132539.46167913, 1417318.81305093,\n","       1231225.21714005,  910906.44643251, 1276735.83532651,\n","        883993.08144749, 1826394.02450035, 1336394.8924936 ,\n","       1727137.10791933, 1327514.33989252, 1914583.83133246,\n","        929171.47584255, 1462740.77499408,  885889.96322305,\n","       1477620.82645898, 1667498.43736786, 1292556.30799373,\n","       1615919.92901505, 1371473.11947095, 1738295.91387711,\n","       1692249.67927784,  858420.17633966, 1225186.96386361,\n","        803530.16852143, 1431148.07286357, 1166350.47583197,\n","       1314617.36791337, 1092391.09869375,  871480.59586969,\n","       1009735.38958327, 1279853.32598251, 1736647.91474949,\n","       1041044.60525677,  639121.38389512, 1387572.5363001 ,\n","       2199142.60985806, 1081554.26412708, 1578528.98456859,\n","       1314911.20553173, 1097746.32489515, 1196931.0025762 ,\n","       1230248.96364841, 1475972.59132302, 1366322.36495656,\n","       1530522.06698697, 1281046.03951529, 1233521.58238629,\n","       1047262.08103333, 1491890.58956909, 1097443.57467049,\n","       1584297.40100305, 1061903.6959341 ,  988280.54851446,\n","       1460547.59442993,  965854.45607224, 1615465.7566525 ,\n","        441547.31034253,  959326.77580264, 1603410.06865131,\n","        666577.7160874 ,  748401.3525672 , 1580973.81710933,\n","       1227838.09760983, 1227758.00062323,  985455.15603754,\n","       1341368.572851  , 1397480.4338992 , 1510059.53903751,\n","       1436094.4546182 ,  991178.28946019, 1321218.78559559,\n","       1771135.14144949, 1776726.00589182, 1322751.77182912,\n","       1307253.89880569,  844980.04518017, 1300490.85785518,\n","       1141445.99170909, 1142387.51181678, 1579611.51809081,\n","        610360.48095016,  623945.09933407,  912686.01229549,\n","       1553399.32235727,  934875.91837291, 1738197.98616287,\n","       1575442.10960852,  951146.65656714,  930251.52811006,\n","        860711.90594777, 1005363.8127037 , 1355288.74099102,\n","        875461.19510635, 1001224.23426832, 1563905.72601134,\n","       1359137.99384539, 1665197.22327575, 1319548.81096692,\n","        827023.94444838, 1448549.72404153, 1181161.41089148,\n","       1108823.69618441, 1536306.98552169, 1259041.27839323,\n","       1288042.12393822, 1182657.65939706, 1250424.47361761,\n","       1004472.75390626, 1503669.16322258, 1186069.73654663,\n","       1134312.59174346, 1050542.13665765,  990973.97050191,\n","       1819252.00429963,  897154.44006248, 1313135.48614253,\n","       1765273.4438072 , 1173059.32529414,  936366.13531404,\n","        772910.1721038 , 1600686.7583582 , 1356394.36373171,\n","       1410998.34771072,  803303.1147322 ,  985533.66455294,\n","        816083.36059332, 1254913.19406932, 1230706.92712539,\n","       1755963.36216533, 1316184.62454991,  916355.25725509,\n","       1332089.66221887,  860628.71304193, 1053170.86506006,\n","       1120691.63807094,  610128.44501698,  790283.07617028,\n","       2271981.78381512, 1415883.86202622, 1513508.10126526,\n","       1798228.53825151, 1135148.18471626, 1362482.39415089,\n","       1876486.02363017,  787174.27347985, 1055765.75563421,\n","       1232876.09962222, 1498132.04204935, 1068430.21664378,\n","       1340439.18247172, 1346462.68493918, 1045332.65989635,\n","       1035680.76888977, 1169395.96932625, 1377505.95251002,\n","        929451.10167614, 1080377.20705608, 1107376.45332207,\n","       1198885.31085115,  750621.94222413, 1044919.15019711,\n","       1499130.18745999, 1116873.9774284 , 1484985.73402109,\n","       1693004.21519444, 1487089.51816135, 1446296.33266262,\n","        693295.23672618, 1054960.02571378, 1289744.4583669 ,\n","       1792707.14551395,  971130.88103944,  978488.47337218,\n","        759408.09637165,  989676.6238747 ,  932687.97182086,\n","        817199.52114253, 1814428.59993494, 1858419.74447168,\n","       1044828.28865815, 1115401.76444633, 1560018.23109471,\n","       1152191.23603021,  855448.42294753, 1191827.00502878,\n","       1282784.91924894,  775535.2125537 , 1553712.4991812 ,\n","        777849.32681064,  662675.29955295,  522544.12043189,\n","       1903493.43820673, 1067089.79745727, 1346662.38258916,\n","       1125924.4144035 , 1297707.51809082, 1343877.11170657,\n","       1360410.66705895, 1244552.86506688, 1124384.64640051,\n","        795960.8033722 ,  910073.98938981, 1714821.09347466,\n","       1473647.77795808, 1186136.28199103, 1035385.56401626,\n","       1892106.40381311,  935768.57206066, 1323424.11813307,\n","        980458.45389627,  917935.8131249 , 1374669.98939783,\n","       1298483.79838953, 1033799.15166636, 1109895.76657416,\n","       1365892.36798253,  829682.93967236, 1036223.71333621,\n","       1508763.95527219, 1773905.42510123,  885468.40590119,\n","       1254726.39877104, 1074116.32610932, 1274312.13003976,\n","        718631.78459728,  758905.61271735, 1457437.8959793 ,\n","        598326.70716005,  786118.3494351 ,  428097.7055698 ,\n","       1225146.37490009, 1416459.00040893, 1029672.19142655,\n","        653626.39324439, 1328334.53912069, 1334569.66585673,\n","        981056.19022394, 1817937.03391357, 1364492.52939985,\n","        508361.73817937, 1127646.97222156, 1103760.51089375,\n","       1438085.52194755,  900214.67550039, 1382383.79672589,\n","        808121.9888603 ,  726853.4418131 , 1412001.73654841,\n","        611872.26055621,  783697.12866841, 1346839.17339495,\n","       1607953.18239579,  860733.95946191,  888753.3942664 ,\n","       1632842.57015073, 1738987.33995806, 1354518.52416453,\n","       1218099.18688098,  843649.62660182, 1284796.25314327,\n","       1308771.99763081, 1300830.28651497,  812867.38135424,\n","       1472554.61598209, 1371160.49645303, 1451054.83387942,\n","       1497300.12140394, 1408623.53122115, 1298685.53686798,\n","       1594988.11756189, 1019774.81903494,  669981.23921242,\n","       1204346.04652555,  834713.93391712,  701905.70517261,\n","       1551568.37411264,  712740.2267181 ,  873758.22908515,\n","       1527820.55876454, 1790391.25309459, 1406651.01133909,\n","       1207085.12536292, 1358891.79636564, 1496985.35292651,\n","        967241.25454133, 1125086.80298471,  852033.17725156,\n","       1110260.17245783, 1472630.47467742,  987851.36602917,\n","       1073465.0746347 , 1751449.13556596, 1226470.10530432,\n","       1320410.01692211, 1502821.22621505, 1587587.95254172,\n","       1168922.60795402,  351122.23832638, 1411698.29961562,\n","       1047370.06649908, 1590880.95233193,  790286.85170612,\n","       1139027.96577311, 1141891.80438449,  795336.32069611,\n","        870579.39775437, 1119020.83607917, 1284571.99289647,\n","       1288959.71772357, 1441366.36825625, 1139779.04728217,\n","       1023538.36188729, 1432136.50237514,  969054.03852916,\n","       1368738.93337537,  840043.03102017, 1085547.14531582,\n","       1083561.54657045, 1631514.2932355 , 1122169.56142911,\n","       1133358.03436414, 1394617.42160539, 1026229.90708062,\n","       1452139.99393935, 1392827.46784887, 1513015.70581262,\n","       1568797.44058037, 1256282.35116757, 1487797.82459589,\n","        984067.42458101, 1412948.73655407, 1672049.65344179,\n","       1306081.64816195, 1354604.25530866, 1235105.64703112,\n","       1428125.69136145,  869480.70189831, 1333400.50691409,\n","        970786.63186914,  586898.58023456, 1602118.35735471,\n","       1261721.99642093, 1562709.69053757, 1231923.49045423,\n","       1713933.53993882, 1238803.84884565, 1329489.39733893,\n","       1115689.52974134, 1461505.67101121, 1536294.59108251,\n","       1360797.90586825, 1285380.39905973,  867277.77830244,\n","       1526074.97614565,  571814.66813281,  440132.97765057,\n","       1458253.50923815, 1240676.17785374, 1799335.11732867,\n","       1591987.36709279,  869278.66666816, 1327741.92646359,\n","       1543352.95100228, 1395062.35520992,  372309.70370891,\n","        490477.41960082, 1323749.48435765, 1026213.84738661,\n","       1225673.29635787, 1245827.88199654, 1041805.87485268,\n","       1055894.87241724, 1709815.06163979, 1349101.78610254,\n","       1048142.89931513, 1648183.0665551 , 1228784.37886516,\n","       1174880.67171549, 1047497.29480366, 1247459.92343365,\n","       1119726.30052876, 1277815.48607586, 1387839.53615592,\n","        838344.55062032, 2020593.60658177, 1295112.77226606,\n","        682759.04108014,  779575.03918304, 1415476.51086885,\n","       1411164.79021564,  990987.55652713, 1140352.82832514,\n","       1792719.3373759 , 1860793.53520325, 1501727.47558771,\n","       1031787.48130213, 1057918.24228433, 1615890.0270213 ,\n","       1721494.24795201, 1376693.91188421, 1096198.24693993,\n","       1117696.51822568,  811085.03060217, 1312548.43134104,\n","       1083759.12908134, 1392547.63571782, 1725298.26383747,\n","       1032413.30433631,  690592.76303433, 1432633.91570865,\n","       1271099.09844548, 1067855.14335661, 1350305.7700415 ,\n","       1979610.95172072,  863967.73192643, 1426871.61747395,\n","        513629.3030111 , 1459829.47199136, 1294311.7348222 ,\n","       1423835.64181116, 1095384.93044723,  765423.48155282,\n","       1464434.0324575 , 1448577.05001185, 1412586.86800273,\n","       1496069.04025566, 1306179.28187858, 1355740.05962959,\n","       1529224.70256107, 1074015.07856208, 1271158.58927196,\n","       1026856.57400855, 1038286.58408934, 1538820.40223969,\n","       1329868.98450072, 1164887.55036738,  934165.27768929,\n","       1068211.84067263, 1218498.35714254,  163911.94672368,\n","       1180473.08069856, 1234203.42171099, 1020472.99305532,\n","       1867877.76465191,  957488.566209  , 1317234.00516872,\n","       1058939.25769617, 1408561.5506869 , 1315085.87732507,\n","       1526759.98400688, 1215648.86326388,  857697.48885468,\n","       1616525.43974133,  909660.93711299, 1054407.12744144,\n","       1288241.79795383, 1578379.83167218,  594273.46164396,\n","       1310641.11956778, 1306866.02305965, 1691313.66840292,\n","       1366262.51175191, 1153289.80938871,  653611.66676928,\n","       1335292.1536825 , 1229488.34014528, 1371950.69275329,\n","       1228943.11340182, 1248749.76721976, 1163135.09978634,\n","       1615412.79633795, 1882359.15058432, 1514125.01417402,\n","       1570135.18508662, 1391193.72123657, 1548357.70722641,\n","       1237890.61515545,  397248.88367336,  899158.77459842,\n","       1244118.62636523, 1483460.71577617,  849158.99453228,\n","       1103130.89436854, 1566383.24186846, 1801242.39169298,\n","       1134945.54424436,  857922.93167162, 1393475.04487007,\n","        887522.59150668, 1207487.55332402,  940963.78850277,\n","       1110155.10214351, 1287938.14313181,  844495.40061238,\n","        950845.41746419, 1378240.49568349, 1413391.32381682,\n","       1500841.0839747 , 1318268.33225705, 1022589.96914518,\n","        991416.94950474, 1161797.51926673, 1346594.86618785,\n","        970308.67703537, 1633104.87580729, 1162694.20392617,\n","       1041366.96829483, 2058068.3908911 , 1501617.83319052,\n","        847392.49525958,  433725.2093488 , 1125468.92782873,\n","       1293819.01786167, 1359204.82005594,  831864.13020668,\n","       1813454.4058575 , 1371613.88174205, 1665804.21092168,\n","        830739.40259173, 1154568.07419857, 1144938.65657926,\n","        918501.37662071, 1144306.11858206,  879411.15412581,\n","       1770496.58376872, 1308182.8726242 , 1736066.89456845,\n","        860089.97888745, 1187083.07767019, 1739053.71736139,\n","       1122290.70839109, 1078994.30610941, 1749362.69615597,\n","       1708370.72644789,  758125.40154417,  774639.08666632,\n","       1290542.90830319, 1568435.30305908,  681391.89097613,\n","       1286290.73769635, 1240149.08179717, 1767291.7967647 ,\n","        902841.84189116, 1808417.35992047, 1403092.40248955,\n","       2092334.07779293,  786364.26529347, 1417329.75577064,\n","       1077041.18732192,  580191.54105558, 1737367.88786633,\n","        790016.33936361, 1156209.97044035, 1196297.2085511 ,\n","        940257.14514801, 1189721.407184  , 1217181.91171786,\n","       1360476.03841757, 1288788.64910087, 1268828.23165307,\n","       1016722.87155171,  863320.7818631 , 1085547.04185215,\n","       1188030.26471093, 1809273.57918766, 1790662.28940537,\n","       1862763.91915933, 1742850.53997965,  917298.68385692,\n","         99329.73726634, 1134904.92681101, 1310604.17962749,\n","       1440682.11281359, 1808365.73962677, 1404191.59265838,\n","       1321519.49225292,  691032.81101568, 1217136.80352231,\n","        598663.14106444, 1586048.24851055, 1216026.31421585,\n","       1249959.63631521, 1545206.00357193,  592608.66906442,\n","        768593.62547256, 1400098.53202228, 1325758.4769052 ,\n","        839901.19167173, 1037108.20176799, 1548658.49987919,\n","       1293993.21370432, 1164417.99778821, 1347054.85252953,\n","       1342521.45779919, 1070434.37441981, 1569938.97807057,\n","       1589210.92533378, 1795557.77320276,  792876.92148682,\n","       1822747.68807692, 2058840.6483318 ,  771364.72946361,\n","       1022937.81729245, 1384037.08813919, 1067062.46339407,\n","       1733761.0700763 ])"]},"metadata":{},"execution_count":28}],"source":["RR.fit(x_train,y_train)\n","y_pred_test_RR=RR.predict(x_test)\n","y_pred_test_RR"],"id":"etH47GOGVjx5"},{"cell_type":"code","execution_count":29,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":429,"status":"ok","timestamp":1699369688882,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"},"user_tz":-330},"id":"n99SkhBSV0HM","outputId":"4d963a1c-f56a-4c55-c871-8f754dc1208c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Test Mean Squared Error: 10074785242.52\n","Test R-Squared: 0.91\n","Test Explained Variance Score: 0.91\n","Test Mean Absolute Error: 80530.87\n"]}],"source":["mse = mean_squared_error(y_pred_test_RR, y_test)\n","r2 = r2_score(y_pred_test_RR, y_test)\n","expl_var = explained_variance_score(y_pred_test_RR, y_test)\n","mae = mean_absolute_error(y_pred_test_RR, y_test)\n","\n","# Print evaluation metrics for testing set\n","print('Test Mean Squared Error: {:.2f}'.format(mse))\n","print('Test R-Squared: {:.2f}'.format(r2))\n","print('Test Explained Variance Score: {:.2f}'.format(expl_var))\n","print('Test Mean Absolute Error: {:.2f}'.format(mae))"],"id":"n99SkhBSV0HM"},{"cell_type":"markdown","source":["##### Find the maximum value of alpha for best r2_score"],"metadata":{"id":"zxqkZ5GjVB5G"},"id":"zxqkZ5GjVB5G"},{"cell_type":"code","execution_count":30,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":387,"status":"ok","timestamp":1699369739006,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"},"user_tz":-330},"id":"8-jfRXYlWAzo","outputId":"a851959a-e0bd-4a9e-d748-51b89c0733c2"},"outputs":[{"output_type":"stream","name":"stdout","text":["0.9115990064748175 0.0001\n","0.9115989635418671 0.001\n","0.9115985342059462 0.01\n","0.9115942402050662 0.1\n","0.911551236031384 1\n","0.9111147799259341 10\n"]}],"source":["alpha=[0.0001, 0.001,0.01, 0.1, 1, 10]\n","for i in alpha:\n","  RR=Ridge(alpha=i)\n","  RR.fit(x_train,y_train)\n","  y_pred_test_RR=RR.predict(x_test)\n","  r2 = r2_score(y_pred_test_RR, y_test)\n","  print(r2,i)\n","\n","## So max value of r2_score is at alpha=.0001\n"],"id":"8-jfRXYlWAzo"},{"cell_type":"markdown","metadata":{"id":"6RrloDOEviuq"},"source":["## Lasso Regression"],"id":"6RrloDOEviuq"},{"cell_type":"markdown","source":["##### Find the maximum value of alpha for best r2_score"],"metadata":{"id":"0LB7hrohVIvR"},"id":"0LB7hrohVIvR"},{"cell_type":"code","execution_count":31,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":390,"status":"ok","timestamp":1699369758468,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"},"user_tz":-330},"id":"8ZXCT1Bhgopf","outputId":"b1c2d490-fec8-4f38-b6da-8dafd4c1001b"},"outputs":[{"output_type":"stream","name":"stdout","text":["0.9115990111888406 0.0001\n","0.911599010348309 0.001\n","0.9115990062270065 0.01\n","0.9115989244864693 0.1\n","0.9115979685236313 1\n","0.9115877382627942 10\n"]}],"source":["alpha=[0.0001, 0.001,0.01, 0.1, 1, 10]\n","for i in alpha:\n","  LR=Lasso(alpha=i)\n","  LR.fit(x_train,y_train)\n","  y_pred_test_LR=LR.predict(x_test)\n","  r2 = r2_score(y_pred_test_LR, y_test)\n","  print(r2,i)\n"],"id":"8ZXCT1Bhgopf"},{"cell_type":"markdown","metadata":{"id":"e03TaJG9xCfs"},"source":["## Elastic Net"],"id":"e03TaJG9xCfs"},{"cell_type":"code","execution_count":32,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":394,"status":"ok","timestamp":1699369764882,"user":{"displayName":"Eisha Akanskha","userId":"01502528335957365622"},"user_tz":-330},"id":"o3BoYqWowjFw","outputId":"43b921cd-767d-42a8-873e-bc983fd3ff63"},"outputs":[{"output_type":"stream","name":"stdout","text":["0.911589467677847 0.0001\n","0.911503316498351 0.001\n","0.9106161544639516 0.01\n","0.8991950773039386 0.1\n","0.5380316339233975 1\n","-26.80669039031005 10\n"]}],"source":["EN = ElasticNet(alpha=1.0, l1_ratio=0.5)\n","\n","## Find the max value of alpha for best r2_score\n","alpha=[0.0001, 0.001,0.01, 0.1, 1, 10]\n","for i in alpha:\n","  EN=ElasticNet(alpha=i)\n","  EN.fit(x_train,y_train)\n","  y_pred_test_EN=EN.predict(x_test)\n","  r2 = r2_score(y_pred_test_EN, y_test)\n","  print(r2,i)\n","\n","## So max value of r2_score is at alpha=.0001\n"],"id":"o3BoYqWowjFw"},{"cell_type":"code","execution_count":null,"metadata":{"id":"Bq7jx6bRw1Fa"},"outputs":[],"source":[],"id":"Bq7jx6bRw1Fa"}],"metadata":{"colab":{"provenance":[{"file_id":"1uHCNkC7azwixNaTUfzwc9byrnEW4VAIT","timestamp":1696310606500}]},"hide_input":false,"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.12"},"toc":{"base_numbering":1,"nav_menu":{},"number_sections":true,"sideBar":true,"skip_h1_title":false,"title_cell":"Table of Contents","title_sidebar":"Contents","toc_cell":false,"toc_position":{},"toc_section_display":true,"toc_window_display":false}},"nbformat":4,"nbformat_minor":5}